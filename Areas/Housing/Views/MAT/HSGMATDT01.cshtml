
@{
    ViewBag.Title = "HSGMATDT01";
}

<div class="container">
    <div class="page-inner">
        <div class="page-header">
            <h3 class="fw-bold mb-3">ข้อมูลประจำวันโรงเรือนผสม-อุ้มท้อง</h3>
            <ul class="breadcrumbs mb-3">
                <li class="nav-home">
                    <a href="#">
                        <i class="icon-home"></i>
                    </a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Housing</a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Datatables</a>
                </li>
            </ul>
        </div>
        <div class="row">
            <ol class="activity-feed">
                <li class="feed-item feed-item-info">
                    <div id="container0" class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title">1.ข้อมูลภาพรวมรายงานประจำวัน</h4>
                                @using (Html.BeginForm("HSGMATDT01", "MAT", FormMethod.Get, new { enctype = "multipart/form-data", @class = " bordered-row" }))
                                {
                                    <div class="row">
                                        <div class="col-md-6 col-lg-3">
                                            <div class="form-group">
                                                <div class="input-group mb-3 validate-input" data-validate="โปรดเลือกฟาร์ม">
                                                    <span class="input-group-text" id="basic-addon1">ฟาร์ม</span>
                                                    <select class="form-select form-control input-req-date dropdown" id="searchSiteId" name="searchSiteId">
                                                        @foreach (var sit in ViewBag.MAS_SITE)
                                                        {
                                                            <option value="@sit.SITE_ID">@sit.SITE_NM_TH</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-lg-3">
                                            <div class="form-group">
                                                <div class="input-group mb-3 validate-input" data-validate="โปรดเลือกวันที่">
                                                    <span class="input-group-text" id="basic-addon1">วันที่</span>
                                                    @Html.TextBox("searchDate", Convert.ToString(string.Format("{0:dd-MMM-yyyy}", Convert.ToDateTime(ViewBag.searchDate))) as string, new { @class = "form-control input-req-date", autocomplete = "off", tabindex = "1", placeholder = "Select Date", id = "searchDate" })
                                                    <span class="input-group-icon">
                                                        <i class="fas fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-lg-3">
                                            <div class="form-group">
                                                <div class="input-group mb-3">
                                                    <span class="input-group-text" id="basic-addon1">สัปดาห์ที่</span>
                                                    <input type="text"
                                                           id="WEEK"
                                                           class="form-control"
                                                           placeholder="37"
                                                           aria-describedby="basic-addon1" readonly />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-lg-3">
                                            <div class="form-group">
                                                <div class="input-group mb-3 validate-input" data-validate="โปรดเลือกเล้า">
                                                    <span class="input-group-text" id="basic-addon1">เล้า</span>
                                                    <select class="form-select dropdown-multiple input-req-date" id="searchHousingId" name="searchHousingId" multiple="multiple">
                                                        <option value="ALL" selected>ทุกเล้า</option>
                                                        @foreach (var hsg in ViewBag.MAS_HSG)
                                                        {
                                                            <option value="@hsg.HSG_ID">@hsg.HSG_CODE</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 col-lg-12 d-flex" style="justify-content:flex-end !important">
                                            <button type="submit" class="btn btn-primary btn-round">Search</button>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table id="tb_main" style="width:120%" border="1"
                                           class="display table table-striped table-hover table-bordered">
                                        <thead>
                                            <tr>
                                                <th rowspan="3" width="2%" style="text-align:center !important">No.</th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="3%" style="text-align:center !important"></th>
                                                <th rowspan="3" width="5%" style="text-align:center !important">เล้า</th>
                                                <th rowspan="3" width="5%" style="text-align:center !important">ประเภท</th>
                                                <th colspan="11" style="text-align:center !important">จำนวนสุกร</th>
                                                <th colspan="3" style="text-align:center !important">อุณหภูมิ (T)</th>
                                                <th colspan="3" style="text-align:center !important">ความชื้น (H)</th>
                                            </tr>

                                            <tr>

                                                <th rowspan="2" width="5%" style="text-align:center !important">ยกมา</th>
                                                <th colspan="2" width="5%" style="text-align:center !important">รับจากเล้า</th>
                                                <th rowspan="2" width="7%" style="text-align:center !important">ย้าย</th>
                                                <th rowspan="2" width="5%" style="text-align:center !important">รับ</th>
                                                <th rowspan="2" width="7%" style="text-align:center !important">ตาย</th>
                                                <th rowspan="2" width="7%" style="text-align:center !important">คัดทิ้ง</th>
                                                <th rowspan="2" width="5%" style="text-align:center !important">ขาย</th>
                                                <th rowspan="2" width="5%" style="text-align:center !important">คงเหลือ</th>
                                                <th rowspan="2" style="text-align:center !important">เปลี่ยนสถานะ</th>
                                                <th rowspan="2" style="text-align:center !important">รายการผสมพันธุ์</th>
                                                <th rowspan="2" style="text-align:center !important">เช้า</th>
                                                <th rowspan="2" style="text-align:center !important">เย็น</th>
                                                <th rowspan="2" style="text-align:center !important">เฉลี่ย</th>
                                                <th rowspan="2" style="text-align:center !important">เช้า</th>
                                                <th rowspan="2" style="text-align:center !important">เย็น</th>
                                                <th rowspan="2" style="text-align:center !important">เฉลี่ย</th>
                                            </tr>
                                            <tr>
                                                <th width="2%" style="text-align:center !important">คลอด</th>
                                                <th width="2%" style="text-align:center !important">ทดแทน</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="card-footer d-flex" style="justify-content:flex-end !important">
                                <button id="SAVE_MAIN" class="btn btn-primary btn-round">Save</button>
                            </div>
                        </div>
                    </div>
                </li>
                <li class="feed-item feed-item-info">
                    <ol class="activity-feed">
                        <li class="feed-item feed-item-info">
                            <div id="container1" class="col-md-12" hidden>
                                <div class="card">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-6 col-lg-10">
                                                <h4 class="card-title">1.1 การย้าย</h4>
                                            </div>
                                            <div class="col-md-6 col-lg-2 d-flex" style="justify-content:flex-end !important">
                                                <button id="collapse" onclick="Collapse()" class="btn btn-icon btn-round btn-border btn-danger" title="Collapse">
                                                    <i class="fas fa-angle-double-up"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <input type="hidden" id="SIT" />
                                        <input type="hidden" id="HSG" />
                                        <input type="hidden" id="MDT" />
                                        <div class="table-responsive">
                                            <table id="tb_move" style="width:100%" border="1"
                                                   class="display table table-striped table-hover table-bordered">
                                                <thead>
                                                    <tr style="text-align:center !important">
                                                        <th style="text-align:center !important">ลำดับ</th>
                                                        <th style="text-align:center !important">Key</th>
                                                        <th style="text-align:center !important">เพศ</th>
                                                        <th style="text-align:center !important">ฟาร์ม</th>
                                                        <th style="text-align:center !important">โรงเรือนต้นทาง</th>
                                                        <th style="text-align:center !important">เบอร์สุกรที่ย้าย</th>
                                                        <th style="text-align:center !important">โรงเรือนปลายทาง</th>
                                                        <th style="text-align:center !important">วันที่โรงเรือนปลายทาง</th>
                                                        <th style="text-align:center !important">วันที่แรกรับเข้า</th>
                                                        <th style="align-content:center">
                                                            <div class="d-flex align-items-center selectgroup-pills">
                                                                <button type="button"
                                                                        id="BT-ADD_MOVE"
                                                                        onclick="AddMovement(this)"
                                                                        class="selectgroup-button selectgroup-button-icon">
                                                                    <i class="fa fa-plus text-success"></i>
                                                                </button>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="card-footer d-flex" style="justify-content:flex-end !important">
                                        <button class="btn btn-primary btn-round" id="saveMovement">Save</button>
                                    </div>
                                </div>

                            </div>
                        </li>
                        <li class="feed-item feed-item-info">
                            <div id="container2" class="col-md-12" hidden>
                                <div class="card">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-6 col-lg-10">
                                                <h4 class="card-title">1.2 สุกรตาย/คัดทิ้ง</h4>
                                            </div>
                                            <div class="col-md-6 col-lg-2 d-flex" style="justify-content:flex-end !important">
                                                <button id="collapse" onclick="Collapse()" class="btn btn-icon btn-round btn-border btn-danger" title="Collapse">
                                                    <i class="fas fa-angle-double-up"></i>
                                                </button>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="card-body">
                                        <input type="hidden" id="SIT_L" />
                                        <input type="hidden" id="HSG_L" />
                                        <input type="hidden" id="LDT_L" />
                                        <div class="table-responsive">
                                            <table id="tb_lost" style="width:100%" border="1"
                                                   class="display table table-striped table-hover table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th rowspan="2" style="text-align:center !important">ลำดับ</th>
                                                        <th rowspan="2" style="text-align:center !important">KEY</th>
                                                        <th rowspan="2" style="text-align:center !important">SK</th>
                                                        <th rowspan="2" style="text-align:center !important">User</th>
                                                        <th rowspan="2" style="text-align:center !important">ฟาร์ม</th>
                                                        <th rowspan="2" style="text-align:center !important">เล้า</th>
                                                        <th rowspan="2" style="text-align:center !important">เพศ</th>
                                                        <th rowspan="2" style="text-align:center !important">วันที่บันทึก</th>
                                                        <th rowspan="2" style="text-align:center !important">วันที่ตายคัดทั้ง</th>
                                                        <th rowspan="2" style="text-align:center !important">ประเภทตายคัดทั้ง</th>
                                                        <th rowspan="2" style="text-align:center !important">รหัสสาเหตุ1</th>
                                                        <th rowspan="2" style="text-align:center !important">รหัสสาเหตุ2</th>
                                                        <th rowspan="2" style="text-align:center !important">รหัสสาเหตุ3</th>

                                                        <th rowspan="2" width="15%" style="text-align:center !important">เบอร์หู</th>
                                                        <th rowspan="2" style="text-align:center !important">ตาย</th>
                                                        <th rowspan="2" style="text-align:center !important">คัดทิ้ง</th>

                                                        <th colspan="10" style="text-align:center !important">สาเหตุ</th>

                                                        <th rowspan="2" width="4%" style="align-content:center">
                                                            <div class="d-flex align-items-center selectgroup-pills">
                                                                <button type="button"
                                                                        id="BT-ADD_LOST"
                                                                        onclick="AddLost(this)"
                                                                        class="selectgroup-button selectgroup-button-icon">
                                                                    <i class="fa fa-plus text-success"></i>
                                                                </button>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                    <tr>
                                                        <th style="text-align:center !important">รูปร่าง</th>
                                                        <th style="text-align:center !important">เต้านม</th>
                                                        <th style="text-align:center !important">ขา</th>
                                                        <th style="text-align:center !important">อวัยวะเพศ</th>
                                                        <th style="text-align:center !important">น้ำเชื้อ</th>
                                                        <th style="text-align:center !important">ถ่ายดำ/แดง</th>
                                                        <th style="text-align:center !important">โรคผิวหนัง</th>
                                                        <th style="text-align:center !important">โรคปอด</th>
                                                        <th style="text-align:center !important">ป่วย</th>
                                                        <th style="text-align:center !important">ไม่ทราบสาเหตุ</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="card-footer d-flex" style="justify-content:flex-end !important">
                                        <button id="saveLost" class="btn btn-primary btn-round">
                                            Save
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="feed-item feed-item-info">
                            <div id="container3" class="col-md-12" hidden>
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title">1.3 สุกรมีปัญหา</h4>
                                    </div>
                                    <div class="card-body">
                                        <input type="hidden" id="SIT_IST" />
                                        <input type="hidden" id="HSG_IST" />
                                        <input type="hidden" id="IDT_IST" />
                                        <div class="table-responsive">
                                            <table id="tb_insmn_st" style="width:100%" border="1"
                                                   class="display table table-striped table-hover table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th width="2%" style="text-align:center !important">ลำดับ</th>
                                                        <th style="text-align:center !important">KEY</th>
                                                        <th style="text-align:center !important">SK</th>
                                                        <th style="text-align:center !important">ID</th>
                                                        <th style="text-align:center !important">ฟาร์ม</th>
                                                        <th style="text-align:center !important">เล้า</th>
                                                        <th style="text-align:center !important">วันที่</th>
                                                        <th style="text-align:center !important">เพศ</th>
                                                        <th width="15%" style="text-align:center !important">เบอร์หู</th>
                                                        <th style="text-align:center !important">GGP</th>
                                                        <th style="text-align:center !important">BRDR</th>
                                                        <th style="text-align:center !important">แท้ง</th>
                                                        <th style="text-align:center !important">กลับสัด</th>
                                                        <th style="text-align:center !important">ไม่ท้อง</th>
                                                        <th width="4%" style="align-content:center">
                                                            <div class="d-flex align-items-center selectgroup-pills">
                                                                <button type="button"
                                                                        id="BT-ADD_INSMNST"
                                                                        onclick="AddInsmnSt(this)"
                                                                        class="selectgroup-button selectgroup-button-icon">
                                                                    <i class="fa fa-plus text-success"></i>
                                                                </button>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="card-footer d-flex" style="justify-content:flex-end !important">
                                        <button id="saveInsmnSt" class="btn btn-primary btn-round">Save</button>
                                    </div>
                                </div>
                            </div>
                        </li>
                        <li class="feed-item feed-item-info">
                            <div id="container4" class="col-md-12" hidden>
                                <div class="card">
                                    <div class="card-header">
                                        <h4 class="card-title">1.4 รายการผสมพันธุ์</h4>
                                    </div>
                                    <div class="card-body">
                                        <input type="hidden" id="SIT_I" />
                                        <input type="hidden" id="HSG_I" />
                                        <input type="hidden" id="IDT_I" />
                                        <div class="table-responsive">
                                            <table id="tb_insmn" style="width:100%" border="1"
                                                   class="display table table-striped table-hover table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th rowspan="2" style="text-align:center !important">ลำดับ</th>
                                                        <th rowspan="2" style="text-align:center !important">KEY</th>
                                                        <th rowspan="2" style="text-align:center !important">SK</th>
                                                        <th rowspan="2" style="text-align:center !important">ID</th>
                                                        <th rowspan="2" style="text-align:center !important">ฟาร์ม</th>
                                                        <th rowspan="2" style="text-align:center !important">เล้า</th>
                                                        <th rowspan="2" style="text-align:center !important">วันที่</th>
                                                        <th rowspan="2" style="text-align:center !important">เพศ</th>

                                                        <th rowspan="2" style="text-align:center !important">เบอร์แม่</th>
                                                        <th rowspan="2" style="text-align:center !important">GGP</th>
                                                        <th rowspan="2" style="text-align:center !important">เบอร์พ่อ</th>
                                                        <th rowspan="2" style="text-align:center !important">สถานภาพ</th>
                                                        <th style="text-align:center !important">เปลี่ยนบทบาท</th>
                                                        <th rowspan="2" width="4%" style="align-content: center !important">
                                                            <div class="d-flex align-items-center selectgroup-pills">
                                                                <button type="button"
                                                                        id="BT-ADD_INSMN"
                                                                        onclick="AddInsmn(this)"
                                                                        class="selectgroup-button selectgroup-button-icon">
                                                                    <i class="fa fa-plus text-success"></i>
                                                                </button>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                    <tr>
                                                        <th style="text-align:center !important">สาเหตุ</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="card-footer d-flex" style="justify-content:flex-end !important">
                                        <button id="saveInsmn" class="btn btn-primary btn-round">Save</button>
                                    </div>
                                </div>
                            </div>
                        </li>

                    </ol>
                </li>
            </ol>
        </div>
    </div>
</div>

<script>
    var MAS_HSG = @Html.Raw(Json.Encode(ViewBag.MAS_HSG));
    var HSG_LIST = null;
    var BRDR_LIST = null;
    var idEvent = "";

    $('#searchHousingId').select2({
        theme: "bootstrap-5",
        width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
        placeholder: $(this).data('placeholder'),
        closeOnSelect: false,
        tags: true
    });
    function reverseFormattedDate(t_sdate) {
        var date = String(t_sdate).split("-");
        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        for (var j = 0; j < months.length; j++) {
            if (date[1] == months[j]) {
                date[1] = months.indexOf(months[j]) + 1;
            }
        }
        if (date[1] < 10) {
            date[1] = '0' + date[1];
        }
        var formattedDate = date[2] + "-" + date[1] + "-" + date[0];
        return formattedDate;
    }

    function getFormattedDate(t_sdate) {

        var sptdate = String(t_sdate).split("-");
        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        var myMonth = sptdate[1];
        var myDay = sptdate[2];
        var myYear = sptdate[0];
        var combineDatestr = myDay + "-" + months[myMonth - 1] + "-" + myYear;
        return combineDatestr;
    }
    function getJsonDate(normal_date) {
        var dateObj = new Date(normal_date);
        var unixTimestamp = dateObj.getTime();
        var jsonDate = `/Date(${unixTimestamp})/`;
        return jsonDate;
    }


    function getWeekNumber(dateStr) {
        // Parse the date from the string
        var date = new Date(dateStr);
        // Set the date to the nearest Thursday: current date + 4 - current day number (with Sunday as 7)
        date.setDate(date.getDate() + 4 - (date.getDay() || 7));
        // Get the first day of the year
        var yearStart = new Date(date.getFullYear(), 0, 1);
        // Calculate full weeks to nearest Thursday
        var weekNumber = Math.ceil((((date - yearStart) / 86400000) + 1) / 7);

        return weekNumber;
    }
    $("#searchDate").on('change', function () {
        //console.log(reverseFormattedDate($("#searchDate").val()));
        $("#WEEK").val(getWeekNumber(reverseFormattedDate($("#searchDate").val())));
    });
    $(document).ready(function () {
        $('#searchSiteId').val('BT').trigger("change");
        if ('@ViewBag.searchSiteId' != '') {
            $("#searchSiteId").val(JSON.parse('@Html.Raw(Json.Encode(ViewBag.searchSiteId))')).trigger("change");
        }
        if ('@ViewBag.searchHousingId' != '') {
            $("#searchHousingId").val(JSON.parse('@Html.Raw(Json.Encode(ViewBag.searchHousingId))')).trigger("change");
        }
        $("#searchDate,#SEARCH_SALE_DT_RC,#NEW_ARRV_DT_RC").datepicker({
            todayHighlight: true,
            orientation: 'bottom left',
            format: 'dd-M-yyyy',
            todayBtn: 'linked',
            autoclose: 'true',
            assumeNearbyYear: true
        });

        function SetTypeInput() {
            $('.int').inputmask({
                'alias': 'currency',
                'integerDigits': '12',
                'prefix': '',
                rightAlign: false
            });
            $(".move_select").each(function () {
                $(this).select2({
                    theme: "bootstrap-5",
                    width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                    placeholder: $(this).data('placeholder'),
                    closeOnSelect: false,
                    tags: true
                });
            });
        }

        let focusedElementId;

        // Detect focus for any focusable element within a specific container
        $('#tb_main').on('focusin', 'input, select, textarea', function () {
            focusedElementId = $(this).attr('id');
            //console.log("Focused element id:", focusedElementId);
        });

        tableMain = $("#tb_main").DataTable({
            "searching": false,
            "paging": true,
            "ordering": true,
            "info": false,
            "bAutoWidth": false,
            "lengthChange": false,
            "order": [],
            responsive: !0,
            "columnDefs": [
                {
                    targets: [0],
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [1, 2, 3, 4, 5, 6],
                    orderable: false,
                    visible: false,
                    className: "text-left",
                },
                {
                    targets: [7, 8],
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [9,10, 11, 12, 13, 14, 15, 16, 17, 18,19,20,21,22,23,24,25],
                    orderable: false,
                    className: "text-left",
                    mRender: function (data, type, full) {
                        return numeral(data).format('0,0');
                    }
                },
            ],
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var page = (Math.ceil(meta.settings._iDisplayStart / meta.settings._iDisplayLength)) * 10; // index row
                        return (meta.row + 1) + page;
                    }
                },
                { 'data': 'UK_KEY' },
                { 'data': 'HSG_MATE_SK' },
                { 'data': 'USR_ID' },
                { 'data': 'SITE_ID' },
                { 'data': 'TXN_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                { 'data': 'RCRD_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                { 'data': 'HSG_ID' },
                {
                    'data': 'GND',
                    render: function (e, a, t, n) {
                        var s = {
                            M: { title: "พ่อพันธุ์", state: "primary" },
                            F: { title: "สุกรสาว", state: "success" },
                            X: { title: "แม่พันธุ์", state: "danger" },
                        };
                        return void 0 === s[e] ? e : '<span class="text-' + s[e].state + '"></span>&nbsp;<span class="text-' + s[e].state + '">' + s[e].title + "</span>"
                    }
                },
                
                { 'data': 'BALANCE_QTY' },
                { 'data': 'FM_FRRW_QTY' },
                { 'data': 'FM_RPLCMT_QTY' },
                {
                    'data': 'TFR_QTY',
                    render: function (data, type, row, meta) {
                        var net = (numeral(row.BALANCE_QTY)._value + numeral(row.FM_FRRW_QTY)._value + numeral(row.FM_RPLCMT_QTY)._value + numeral(row.RCV_QTY)._value) - (numeral(row.TFR_QTY)._value + numeral(row.DIED_TOT)._value + numeral(row.DSCRD_TOT)._value + numeral(row.BRDR_SALE_TOT)._value);
                        return "<div class='input-group'><input type='text' class='form-control int' value='" + row.TFR_QTY + "' readonly /><button type='button' class='input-group-icon' onclick='EditMovement(this)' id='TFR_QTY--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' mdt='" + reverseFormattedDate(resJsonToDate(row.TXN_DT)) + "' net='" + net + "' gnd='" + row.GND + "'><i id='ITFR_QTY--" + row.UK_KEY + "' class='fa fa-edit btn_edit'></i></button></div>"
                    }
                },
                { 'data': 'RCV_QTY' },
                {
                    'data': 'DIED_TOT',
                    render: function (data, type, row, meta) {
                        var net = (numeral(row.BALANCE_QTY)._value + numeral(row.FM_FRRW_QTY)._value + numeral(row.FM_RPLCMT_QTY)._value + numeral(row.RCV_QTY)._value) - (numeral(row.TFR_QTY)._value + numeral(row.DIED_TOT)._value + numeral(row.DSCRD_TOT)._value + numeral(row.BRDR_SALE_TOT)._value);
                        return "<div class='input-group'><input type='text' class='form-control int' value='" + row.DIED_TOT + "' readonly /><button type='button' class='input-group-icon' onclick='EditLost(this)' id='DIED_TOT--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' ldt='" + reverseFormattedDate(resJsonToDate(row.TXN_DT)) + "' net='" + net + "' gnd='" + row.GND + "' ><i id='IDIED_TOT--" + row.UK_KEY + "' class='fa fa-edit btn_edit'></i></button></div>"
                    }
},
                {
                    'data': 'DSCRD_TOT',
                    render: function (data, type, row, meta) {
                        var net = (numeral(row.BALANCE_QTY)._value + numeral(row.FM_FRRW_QTY)._value + numeral(row.FM_RPLCMT_QTY)._value + numeral(row.RCV_QTY)._value) - (numeral(row.TFR_QTY)._value + numeral(row.DIED_TOT)._value + numeral(row.DSCRD_TOT)._value + numeral(row.BRDR_SALE_TOT)._value);
                        return "<div class='input-group'><input type='text' class='form-control int' value='" + row.DSCRD_TOT + "' readonly /><button type='button' class='input-group-icon' onclick='EditLost(this)' id='DSCRD_TOT--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' ldt='" + reverseFormattedDate(resJsonToDate(row.TXN_DT)) + "' net='" + net + "' gnd='" + row.GND + "' ><i id='IDSCRD_TOT--" + row.UK_KEY + "' class='fa fa-edit btn_edit'></i></button></div>"
                    }
                },
                { 'data': 'BRDR_SALE_TOT' },
                { 'data': 'NET_QTY' },
                {
                    'data': 'CHG_ST',
                    render: function (data, type, row, meta) {
                        var net = (numeral(row.BALANCE_QTY)._value + numeral(row.FM_FRRW_QTY)._value + numeral(row.FM_RPLCMT_QTY)._value + numeral(row.RCV_QTY)._value) - (numeral(row.TFR_QTY)._value + numeral(row.DIED_TOT)._value + numeral(row.DSCRD_TOT)._value + numeral(row.BRDR_SALE_TOT)._value);
                        if (row.GND == "F" || row.GND == "X") {
                            return "<div class='input-group'><input type='text' class='form-control int' value='" + row.CHG_ST + "' readonly /><button type='button' class='input-group-icon' onclick='EditInsmnSt(this)' id='CHG_ST--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' idt='" + reverseFormattedDate(resJsonToDate(row.TXN_DT)) + "' net='" + net + "' gnd='" + row.GND + "' ><i id='ICHG_ST--" + row.UK_KEY + "' class='fa fa-edit btn_edit'></i></button></div>"
                        } else {
                            return "<div class='input-group'><input type='text' class='form-control int' value='" + row.CHG_ST + "' readonly />"
                        }
                    }
                },
                {
                    'data': 'INSMN_TOT',
                    render: function (data, type, row, meta) {
                        var net = (numeral(row.BALANCE_QTY)._value + numeral(row.FM_FRRW_QTY)._value + numeral(row.FM_RPLCMT_QTY)._value + numeral(row.RCV_QTY)._value) - (numeral(row.TFR_QTY)._value + numeral(row.DIED_TOT)._value + numeral(row.DSCRD_TOT)._value + numeral(row.BRDR_SALE_TOT)._value);
                        if (row.GND == "F" || row.GND == "X") {
                            return "<div class='input-group'><input type='text' class='form-control int' value='" + row.INSMN_TOT + "' readonly /><button type='button' class='input-group-icon' onclick='EditInsmn(this)' id='INSMN_TOT--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' idt='" + reverseFormattedDate(resJsonToDate(row.TXN_DT)) + "' net='" + net + "' gnd='" + row.GND + "' ><i id='IINSMN_TOT--" + row.UK_KEY + "' class='fa fa-edit btn_edit'></i></button></div>"
                        } else {
                            return "<div class='input-group'><input type='text' class='form-control int' value='" + row.INSMN_TOT + "' readonly />"
                        }
                    }
                },
                {
                    'data': 'TEMP_MNNG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='TEMP_MNNG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.TEMP_MNNG + "' />";
                    }
                },
                {
                    'data': 'TEMP_EVNNG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='TEMP_EVNNG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.TEMP_EVNNG + "' />";
                    }
                },
                {
                    'data': 'TEMP_AVG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='TEMP_AVG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.TEMP_AVG + "' readonly/>";
                    }
                },
                {
                    'data': 'HMD_MNNG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='HMD_MNNG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.HMD_MNNG + "' />";
                    }
                },
                {
                    'data': 'HMD_EVNNG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='HMD_EVNNG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.HMD_EVNNG + "' />";
                    }
                },
                {
                    'data': 'HMD_AVG',
                    render: function (data, type, row, meta) {
                        return "<input type='text' class='form-control int' autocomplete='off' onchange='ModifyDirectlyMain(this)' id='HMD_AVG--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' value='" + row.HMD_AVG + "' readonly/>";
                    }
                },
            ],
            "drawCallback": function (settings) {
            $(".int").inputmask({
                'alias': 'currency',
                'integerDigits': '12',
                'digits': 0,
                'prefix': '',
                rightAlign: false
            });
                $('#' + focusedElementId).focus();
            }
        });
        tableMain.on('order.dt', function () {
            tableMain.column(0, { order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw(false);

        if ($("#searchSiteId").val() != "" && $("#searchDate").val() != "" && $("#searchHousingId").val() != "") {
            SelectTbMain();
            $("#WEEK").val(getWeekNumber(reverseFormattedDate($("#searchDate").val())));
        } else {
            if ($("#searchDate").val() == "") {
                $($(searchDate).parent()).addClass('alert-validate-date');
            }
            if ($("#searchSiteId").val() == "") {
                $($(searchSiteId).parent()).addClass('alert-validate-date');
            }
            if ($("#searchHousingId").val() == "") {
                $($(searchHousingId).parent()).addClass('alert-validate-date');
            }
        }
        SetTypeInput();

        tableMove = $("#tb_move").DataTable({
            "searching": false,
            "paging": true,
            "ordering": true,
            "info": false,
            "bAutoWidth": false,
            "lengthChange": false,
            "order": [],
            responsive: !0,
            "columnDefs": [
                {
                    targets: [1, 2, 3, 7,8],
                    visible: false,
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [0, 4, 5,6,9],
                    orderable: false,
                    className: "text-center",
                },
            ],
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var pageInfo = tableMove.page.info();
                        return (meta.row + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                    }
                },
                {
                    'data': 'UK_KEY'
                },
                {
                    'data': 'GND'
                },
                {
                    'data': 'SITE_ID'
                },
                {
                    'data': 'HSG_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(MAS_HSG, function (index, item) {
                            if (row.HSG_ID !== null && row.HSG_ID == item.HSG_ID) {
                                optionList = optionList + ' <option selected="selected" value="' + item.HSG_ID + '">' + item.HSG_ID + '</option> ';
                            } else {
                                optionList = optionList + ' <option value="' + item.HSG_ID + '">' + item.HSG_ID + '</option> ';
                            }
                        });
                        var select = "<div class='input-group'><select class='form-select dropdown move_select' disabled> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                {
                    'data': 'BRDR_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(BRDR_LIST, function (index, item) {
                            if (row.BRDR_ID !== null && row.BRDR_ID == item.BRDR_ID) {
                                optionList = optionList + ' <option selected="selected" value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                            } else {
                                optionList = optionList + ' <option value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                            }
                        });

                        var pageInfo = tableMove.page.info();
                        var row_index = 0;
                        var combines = "";
                        if (row.UK_KEY.split('--').length == 1) {
                            row_index = (numeral(meta.row)._value + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                        }
                        if (row_index > 0) {
                            combines = "--" + row_index.toString();
                        }
                        var select = "<div class='input-group'><select class='form-select dropdown move_select' onchange='BrdrChangeMove(this)' id='BRDR_ID--" + row.UK_KEY + "' sit='" + row.SITE_ID + "' hsg='" + row.HSG_ID + "' brd='" + row.BRDR_ID + "' row='" + meta.row + "' col='" + meta.col + "' require> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                {
                    'data': 'DEST_HSG_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(MAS_HSG, function (index, item) {
                            if (row.HSG_ID != item.HSG_ID) {
                                if (row.DEST_HSG_ID !== null && row.DEST_HSG_ID == item.HSG_ID) {
                                    optionList = optionList + ' <option selected="selected" value="' + item.HSG_ID + '">' + item.HSG_ID + '</option> ';
                                } else {
                                    optionList = optionList + ' <option value="' + item.HSG_ID + '">' + item.HSG_ID + '</option> ';
                                }
                            }
                        });
                        var pageInfo = tableMove.page.info();
                        var row_index = (meta.row + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                        var select = "<div class='input-group'><select class='form-select dropdown move_select' onchange='HsgDestChange(this)' id='DEST_HSG_ID--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' sit='" + row.SITE_ID + "' hsg='" + row.DEST_HSG_ID + "' ndt='" + reverseFormattedDate(resJsonToDate(row.NEW_ARRV_DT)) + "' gnd='" + row.GND + "' > <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                { 'data': 'DEST_HSG_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                { 'data': 'NEW_ARRV_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                {
                    mRender: function (data, type, row, meta) {
                        var pageInfo = tableMove.page.info();
                        var row_index = 0;
                        var combines = "";
                        if (row.UK_KEY.split('--').length == 1) {
                            row_index = (numeral(meta.row)._value + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                        }
                        if (row_index > 0) {
                            combines = "--" + row_index.toString();
                        }
                        return "<div class='d-flex align-items-center selectgroup-pills'><button type='button' onclick='DelMovement(this)' id='BT-DEL_MOVE--" + row.UK_KEY + "' class='selectgroup-button selectgroup-button-icon move_bt' ><i class='fas fa-trash text-danger'></i></button></div>";
                    }
                }

            ],
            "rowCallback": function (row, data, index) {
                var pageInfo = this.api().page.info();
                var row_index = (index + 1) + pageInfo.page * pageInfo.length;
                $('td:eq(0)', row).html(row_index);
                if (data.UK_KEY.split('--').length == 1) {
                    // Update UK_KEY value permanently in the data
                    data.UK_KEY = data.UK_KEY + "--" + row_index;
                    // Update the cell display
                    //$('td:eq(1)', row).html(data.UK_KEY);
                    //$('td:eq(5)', row).html("<div class='d-flex align-items-center selectgroup-pills'><button type='button' onclick='DelMovement(this)' id='BT-DEL_MOVE--" + data.UK_KEY + "' idx='" + $('td:eq(0)', row).html() + "' class='selectgroup-button selectgroup-button-icon move_bt' ><i class='fas fa-trash text-danger'></i></button></div>");
                }

            },
            "drawCallback": function (settings,row, data, index) {
                var api = this.api();

                // Recalculate and update the index numbers after each draw
                api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                    var pageInfo = api.page.info();
                    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                    // Update the cell's content with the new row index
                    $(cell).html(rowIndex);
                });
                //api.column(1, { page: 'current' }).nodes().each(function (cell,i) {
                //    var pageInfo = api.page.info();
                //    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                //    var uk_key = $(cell).html().toString();
                //    if (uk_key.split('--').length == 2) {
                //        uk_key = uk_key.split('--')[0] + "--" + rowIndex;
                //        $(cell).html(uk_key);
                //    }
                //});
                //api.column(3, { page: 'current' }).nodes().each(function (cell, i) {
                //    var pageInfo = api.page.info();
                //    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                //    var uk_key = $(cell).find('select.move_select').attr('id');
                //    if (uk_key.split('--').length == 3) {
                //        uk_key = uk_key.split('--')[0] + "--" + uk_key.split('--')[1] + "--" + rowIndex;
                //        $(cell).find('select.move_select').attr({ 'id': uk_key });
                //    }
                //});
                //api.column(4, { page: 'current' }).nodes().each(function (cell, i) {
                //    var pageInfo = api.page.info();
                //    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                //    var uk_key = $(cell).find('select.move_select').attr('id');
                //    if (uk_key.split('--').length == 3) {
                //        uk_key = uk_key.split('--')[0] + "--" + uk_key.split('--')[1] + "--" + rowIndex;
                //        $(cell).find('select.move_select').attr({ 'id': uk_key });
                //    }
                //});
                //api.column(5, { page: 'current' }).nodes().each(function (cell, i) {
                //    var pageInfo = api.page.info();
                //    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                //    var uk_key = $(cell).find('button.move_bt').attr('id');
                //    if (uk_key.split('--').length == 3) {
                //        uk_key = uk_key.split('--')[0] + "--" + uk_key.split('--')[1] + "--" + rowIndex;
                //        $(cell).find('button.move_bt').attr({ 'id': uk_key });
                //    }
                //});

                $(".int").inputmask({
                    'alias': 'currency',
                    'integerDigits': '12',
                    'digits': 0,
                    'prefix': '',
                    rightAlign: false
                });
                $(".move_select").each(function () {

                    $(this).select2({
                        theme: "bootstrap-5",
                        width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                        placeholder: $(this).data('placeholder'),
                        closeOnSelect: false,
                        tags: true
                    });
                });
            }

        });

        tableLost = $("#tb_lost").DataTable({
            "searching": false,
            "paging": true,
            "ordering": true,
            "info": false,
            "bAutoWidth": false,
            "lengthChange": false,
            "order": [],
            responsive: !0,
            "columnDefs": [
                {
                    targets: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,12],
                    visible: false,
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [0,  13,14,15,16,17,18,19,20,21,22,23,24,25,26],
                    orderable: false,
                    className: "text-center",
                },
            ],
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var pageInfo = tableMove.page.info();
                        return (meta.row + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                    }
                },
                {
                    'data': 'UK_KEY'
                },
                {
                    'data': 'BRDR_LOST_SK'
                },
                {
                    'data': 'USR_ID'
                },
                {
                    'data': 'SITE_ID'
                },
                {
                    'data': 'HSG_ID'
                },
                {
                    'data': 'GND'
                },
                {
                    'data': 'RCRD_DT',render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; }
                },
                {
                    'data': 'LOST_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; }
                },
                {
                    'data': 'LOST_TP'
                },

                {
                    'data': 'CAUS_1',
                },
                {
                    'data': 'CAUS_2',
                },
                {
                    'data': 'CAUS_3',
                },
                {
                    'data': 'BRDR_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(BRDR_LIST, function (index, item) {
                            if (row.BRDR_ID !== null && row.BRDR_ID == item.BRDR_ID) {
                                optionList = optionList + ' <option selected="selected" value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                            } else {
                                optionList = optionList + ' <option value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                            }
                        });
                        var select = "<div class='input-group'><select class='form-select dropdown lost_select' onchange='ModifyDirectlyLost(this)' id='BRDR_ID--" + row.UK_KEY + "' brd='" + row.BRDR_ID + "' row='" + meta.row + "' col='" + meta.col + "' require> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.LOST_TP == 0) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='radio' onchange='ModifyDirectlyLost(this)' name='RADIO_LOST_TP--" + row.UK_KEY + "' id='RADIO0_LOST_TP--" + row.UK_KEY + "' row='" + meta.row + "' col='9' " + checked + " value='0'/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.LOST_TP == 1) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='radio' onchange='ModifyDirectlyLost(this)' name='RADIO_LOST_TP--" + row.UK_KEY + "' id='RADIO1_LOST_TP--" + row.UK_KEY + "' row='" + meta.row + "' col='9' " + checked + " value='1'/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 41 || row.CAUS_2 == 41 || row.CAUS_3 == 41) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS1--" + row.UK_KEY + "' row='" + meta.row + "' value='41' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 42 || row.CAUS_2 == 42 || row.CAUS_3 == 42) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS2--" + row.UK_KEY + "' row='" + meta.row + "' value='42' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 43 || row.CAUS_2 == 43 || row.CAUS_3 == 43) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS3--" + row.UK_KEY + "' row='" + meta.row + "' value='43' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 44 || row.CAUS_2 == 44 || row.CAUS_3 == 44) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS4--" + row.UK_KEY + "' row='" + meta.row + "' value='44' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 45 || row.CAUS_2 == 45 || row.CAUS_3 == 45) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS5--" + row.UK_KEY + "' row='" + meta.row + "' value='45' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 16 || row.CAUS_2 == 16 || row.CAUS_3 == 16) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS6--" + row.UK_KEY + "' row='" + meta.row + "' value='16' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 21 || row.CAUS_2 == 21 || row.CAUS_3 == 21) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS7--" + row.UK_KEY + "' row='" + meta.row + "' value='21' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 33 || row.CAUS_2 == 33 || row.CAUS_3 == 33) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS8--" + row.UK_KEY + "' row='" + meta.row + "' value='33' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 34 || row.CAUS_2 == 34 || row.CAUS_3 == 34) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS9--" + row.UK_KEY + "' row='" + meta.row + "' value='34' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.CAUS_1 == 35 || row.CAUS_2 == 35 || row.CAUS_3 == 35) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='checkbox' onchange='ModifyInDirectlyLost(this)' id='CAUS10--" + row.UK_KEY + "' row='" + meta.row + "' value='35' " + checked + "/>";
                    }
                },
                {
                    mRender: function (data, type, row, meta) {
                        var pageInfo = tableLost.page.info();
                        var row_index = 0;
                        var combines = "";
                        if (row.UK_KEY.split('--').length == 1) {
                            row_index = (numeral(meta.row)._value + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                        }
                        if (row_index > 0) {
                            combines = "--" + row_index.toString();
                        }
                        return "<div class='d-flex align-items-center selectgroup-pills'><button type='button' onclick='DelLost(this)' id='BT-DEL_LOST--" + row.UK_KEY + "' class='selectgroup-button selectgroup-button-icon move_bt' ><i class='fas fa-trash text-danger'></i></button></div>";
                    }
}
            ],
            "rowCallback": function (row, data, index) {
                var pageInfo = this.api().page.info();
                var row_index = (index + 1) + pageInfo.page * pageInfo.length;
                $('td:eq(0)', row).html(row_index);
                if (data.UK_KEY.split('--').length == 1) {
                    data.UK_KEY = data.UK_KEY + "--" + row_index;
                }

            },
            "drawCallback": function () {
                var api = this.api();
                // Recalculate and update the index numbers after each draw
                api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                    var pageInfo = api.page.info();
                    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                    // Update the cell's content with the new row index
                    $(cell).html(rowIndex);
                });
                $(".lost_select").select2({
                    theme: "bootstrap-5",
                    width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                    placeholder: $(this).data('placeholder'),
                    closeOnSelect: false,
                    tags: true
                });
            }
        });

        SetTypeInput();

        tableInsmnSt = $("#tb_insmn_st").DataTable({
            "searching": false,
            "paging": true,
            "ordering": true,
            "info": false,
            "bAutoWidth": false,
            "lengthChange": false,
            "order": [],
            responsive: !0,
            "columnDefs": [
                {
                    targets: [1, 2, 3, 4, 5, 6, 7, 10],
                    visible: false,
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [0, 8, 9, 11, 12, 13,14],
                    orderable: false,
                    className: "text-center",
                },
            ],
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var pageInfo = tableInsmnSt.page.info();
                        return (meta.row + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                    }
                },
                { 'data': 'UK_KEY' },
                { 'data': 'AVY_BRDR_INSMN_SK' },
                { 'data': 'AVY_BRDR_INSMN_ID' },
                { 'data': 'SITE_ID' },
                { 'data': 'HSG_ID' },
                { 'data': 'INSMN_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                { 'data': 'GND' },
                {
                    'data': 'BRDR_FML_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(BRDR_LIST, function (index, item) {
                            if (item.GND == "F" || item.GND == "X") {
                                if (row.BRDR_FML_ID !== null && row.BRDR_FML_ID == item.BRDR_ID) {
                                    optionList = optionList + ' <option selected="selected" value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                } else {
                                    optionList = optionList + ' <option value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                }
                            }
                        });
                        var select = "<div class='input-group'><select class='form-select dropdown insmn_select' onchange='ModifyDirectlyInsmnSt(this)' id='BRDR_FML_ID--" + row.UK_KEY + "' brd='" + row.BRDR_FML_ID + "' row='" + meta.row + "' col='" + meta.col + "' require> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                {
                    'data': 'GGP_F',
                    mRender: function (data, type, row, meta) {
                        if (row.GGP_F == 1) {
                            return "<div class='d-flex align-items-center selectgroup-pills'><input class='form-check-input check_yn_detail' type='checkbox'  id='CHECK_YN--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' checked disabled></div>";
                        } else {
                            return "<div class='d-flex align-items-center selectgroup-pills'><input class='form-check-input check_yn_detail' type='checkbox'  id='CHECK_YN--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' disabled></div>";
                        }
                    }
                },
                { 'data': 'BRDR_ST' },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.BRDR_ST == 7) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='radio' onchange='ModifyDirectlyInsmnSt(this)' name='BRDR_ST--" + row.UK_KEY + "' id='BRDR_ST0--" + row.UK_KEY + "' row='" + meta.row + "' value='7' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.BRDR_ST == 8) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='radio' onchange='ModifyDirectlyInsmnSt(this)' name='BRDR_ST--" + row.UK_KEY + "' id='BRDR_ST1--" + row.UK_KEY + "' row='" + meta.row + "' value='8' " + checked + "/>";
                    }
                },
                {
                    render: function (data, type, row, meta) {
                        var checked = "";
                        if (row.BRDR_ST == 9) {
                            checked = "checked";
                        }
                        return "<input class='form-check-input' type='radio' onchange='ModifyDirectlyInsmnSt(this)' name='BRDR_ST--" + row.UK_KEY + "' id='BRDR_ST2--" + row.UK_KEY + "' row='" + meta.row + "' value='9' " + checked + "/>";
                    }
                },
                {
                    mRender: function (data, type, row, meta) {
                        var pageInfo = tableMove.page.info();
                        return "<div class='d-flex align-items-center selectgroup-pills'><button type='button' onclick='DelInsmnSt(this)' id='BT-DEL_INSMN--" + row.UK_KEY + "' class='selectgroup-button selectgroup-button-icon move_bt' ><i class='fas fa-trash text-danger'></i></button></div>";
                    }
                }
            ],
            "drawCallback": function (settings, row, data, index) {
                var api = this.api();
                api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                    var pageInfo = api.page.info();
                    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                    // Update the cell's content with the new row index
                    $(cell).html(rowIndex);
                });
                $(".insmn_select").select2({
                    theme: "bootstrap-5",
                    width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                    placeholder: $(this).data('placeholder'),
                    closeOnSelect: false,
                    tags: true
                });
            }
        });

        tableInsmn = $("#tb_insmn").DataTable({
            "searching": false,
            "paging": true,
            "ordering": true,
            "info": false,
            "bAutoWidth": false,
            "lengthChange": false,
            "order": [],
            responsive: !0,
            "columnDefs": [
                {
                    targets: [1, 2, 3, 4, 5,6,7],
                    visible: false,
                    orderable: false,
                    className: "text-center",
                },
                {
                    targets: [0,8,9,10,11,12,13],
                    orderable: false,
                    className: "text-center",
                },
            ],
            "columns": [
                {
                    "render": function (data, type, full, meta) {
                        var pageInfo = tableInsmn.page.info();
                        return (meta.row + 1) + numeral(pageInfo.page)._value * numeral(pageInfo.length)._value;
                    }
                },
                { 'data': 'UK_KEY' },
                { 'data': 'AVY_BRDR_INSMN_SK' },
                { 'data': 'AVY_BRDR_INSMN_ID' },
                { 'data': 'SITE_ID' },
                { 'data': 'HSG_ID' },
                { 'data': 'INSMN_DT', render: function (data, type, row) { return data != "" ? resJsonToDate(data) : ""; } },
                { 'data': 'GND' },

                {
                    'data': 'BRDR_FML_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(BRDR_LIST, function (index, item) {
                            if (item.GND == "F" || item.GND == "X") {
                                if (row.BRDR_FML_ID !== null && row.BRDR_FML_ID == item.BRDR_ID) {
                                    optionList = optionList + ' <option selected="selected" value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                } else {
                                    optionList = optionList + ' <option value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                }
                            }
                        });
                        var select = "<div class='input-group'><select class='form-select dropdown insmn_select' onchange='ModifyDirectlyInsmn(this)' id='BRDR_FML_ID--" + row.UK_KEY + "' brd='" + row.BRDR_FML_ID + "' row='" + meta.row + "' col='" + meta.col + "' require> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                {
                    'data': 'GGP_F',
                    mRender: function (data, type, row, meta) {
                        if (row.GGP_F == 1) {
                            return "<div class='d-flex align-items-center selectgroup-pills'><input class='form-check-input check_yn_detail' type='checkbox'  id='CHECK_YN--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' checked disabled></div>";
                        } else {
                            return "<div class='d-flex align-items-center selectgroup-pills'><input class='form-check-input check_yn_detail' type='checkbox'  id='CHECK_YN--" + row.UK_KEY + "' row='" + meta.row + "' col='" + meta.col + "' disabled></div>";
                        }
                    }
                },
                {
                    'data': 'BRDR_ML_ID',
                    render: function (data, type, row, meta) {
                        var optionList = "";
                        $.each(BRDR_LIST, function (index, item) {
                            if (item.GND == "M") {
                                if (row.BRDR_ML_ID !== null && row.BRDR_ML_ID == item.BRDR_ID) {
                                    optionList = optionList + ' <option selected="selected" value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                } else {
                                    optionList = optionList + ' <option value="' + item.BRDR_ID + '">' + item.BRDR_ID + '</option> ';
                                }
                            }
                        });
                        var select = "<div class='input-group'><select class='form-select dropdown insmn_select' onchange='ModifyDirectlyInsmn(this)' id='BRDR_ML_ID--" + row.UK_KEY + "' brd='" + row.BRDR_ML_ID + "' row='" + meta.row + "' col='" + meta.col + "' require> <option value=''></option>" + optionList + "</select></div>";
                        return select;
                    }
                },
                { 'data': 'INSMN_ST' },
                { 'data': 'CAUS' },
                {
                    mRender: function (data, type, row, meta) {
                        var pageInfo = tableMove.page.info();
                        return "<div class='d-flex align-items-center selectgroup-pills'><button type='button' onclick='DelInsmn(this)' id='BT-DEL_INSMN--" + row.UK_KEY + "' class='selectgroup-button selectgroup-button-icon move_bt' ><i class='fas fa-trash text-danger'></i></button></div>";
                    }
                }
            ],
            "drawCallback": function (settings, row, data, index) {
                var api = this.api();
                api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                    var pageInfo = api.page.info();
                    var rowIndex = (i + 1) + pageInfo.page * pageInfo.length;
                    // Update the cell's content with the new row index
                    $(cell).html(rowIndex);
                });
                $(".insmn_select").select2({
                    theme: "bootstrap-5",
                    width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
                    placeholder: $(this).data('placeholder'),
                    closeOnSelect: false,
                    tags: true
                });
            }
        });
    });

    function SelectTbMain() {
        if ($("#searchHousingId").val() == "ALL") {
            $("#searchHousingId").val("");
        }
        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_SELECT",
            dataType: "json",
            cache: false,
            data: {
                searchSiteId: $("#searchSiteId").val(), searchHousingId: $("#searchHousingId").val(), searchDate: $("#searchDate").val()
            },
            success: function (data) {
                var GET_HSG_MAT = data.GET_HSG_MAT;
                tableMain.clear().draw();
                tableMain.rows.add(GET_HSG_MAT).draw();
            },
            error: function () {
            }
        });
    }

    function Collapse() {
        $("html, body").animate({ scrollTop: $('#container0').offset().top }, 50);
        $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
        $('#tb_main').find('input, select, textarea').prop('disabled', false);
        $('#SAVE_MAIN').prop('disabled', false);
        setTimeout(function () {
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
        }, 500);
        idEvent = "";
    }

    function ModifyDirectlyMain(btn) {
        //Directly user input modify.
        var id = $(btn).attr('id');
        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var values = $("#" + id).val();
        var key = id.split('--')[1];


        var indexMain = tableMain
            .rows()
            .indexes()
            .filter(function (value, index) {
                //console.log(key +" | "+ tableMain.row(value).data().UK_KEY);
                return key === tableMain.row(value).data().UK_KEY;
            });

        if (indexMain !== undefined && tableMain.row(indexMain).length > 0) {
            var page = tableMain.page.info();
                tableMain.page(page.page).cell(row, col).data(values).draw(false);
                Calculate(indexMain);
        } else {
            console.log("Invalid row index:", indexMain);
        }
        //for (var i = 0; i < tableMain.data().length; i++) {
        //    console.log(tableMain.data()[i].TFR_QTY);
        //}
    }
    function Calculate(indexMain) {
        var page = tableMain.page.info();
        if (numeral(tableMain.row(indexMain).data().TEMP_MNNG)._value > 0 && numeral(tableMain.row(indexMain).data().TEMP_EVNNG)._value > 0) {
            tableMain.row(indexMain).data().TEMP_AVG = (numeral(tableMain.row(indexMain).data().TEMP_MNNG)._value + numeral(tableMain.row(indexMain).data().TEMP_EVNNG)._value) / 2;
        }
        if (tableMain.row(indexMain).data().HMD_MNNG > 0 && tableMain.row(indexMain).data().HMD_EVNNG > 0) {
            tableMain.row(indexMain).data().HMD_AVG = (numeral(tableMain.row(indexMain).data().HMD_MNNG)._value + numeral(tableMain.row(indexMain).data().HMD_EVNNG)._value) / 2;
        }
        tableMain.row(indexMain).data(tableMain.row(indexMain).data()).draw();
        tableMain.page(page.page).draw(false);
    }
    function HsgDestChange(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $("#" + id).val();
        var ndt = $(btn).attr('ndt');
        var tdt = $("#MDT").val();
        var gnd = $(btn).attr('gnd');

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_ADD_CHECK_MVMT",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, GND: gnd, TXN_DT: tdt, NEW_ARRV_DT: ndt },
            success: function (data) {
                if (data == true) {
                    ModifyDirectlyMove(btn,null);
                } else {
                    Swal.fire({
                        icon: "error",
                        title: 'Not current!',
                        text: "ไม่สามารถเลือก " + hsg +" ได้เนื่องจากไม่สอดคล้องกับปัจจุบัน!",
                        showCancelButton: false,
                        confirmButtonText: 'OK',
                    });
                    $("#" + id).val('').trigger('change');
                }
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    function BrdrChangeMove(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $(btn).attr('hsg');
        var brd = $("#" + id).val();
        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_BRDR_MVMT_DETAIL",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, BRDR_ID:brd },
            success: function (data) {
                var NEW_ARRV_DT = data.BRDR_LIST.NEW_ARRV_DT;
                ModifyDirectlyMove(btn, NEW_ARRV_DT);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    function ModifyDirectlyMove(btn, NEW_ARRV_DT) {
        //Directly user input modify.
        //console.log("Old: " + $(btn).attr('id'));
        var id = $(btn).attr('id');
        //var old_values = $("#" + id).val();

        //var newid = $(btn).attr('id').split('--')[0] + "--" + $(btn).attr('id').split('--')[1] + "--" + $("#" + $(btn).attr('id')).val();
        //$("#" + $(btn).attr('id')).attr({ 'id': newid });

        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var new_values = $("#" + id).val();
        var key = id.split('--')[1] + '--' + id.split('--')[2];

        console.log("New: " + id);
        if (CheckMovement(key, new_values) == false) {

            var indexMove = tableMove
                .rows()
                .indexes()
                .filter(function (value, index) {
                    return key === tableMove.row(value).data().UK_KEY;
                });

            if (indexMove !== undefined && tableMove.row(indexMove).length > 0) {
                var page = tableMove.page.info();
                tableMove.page(page.page).cell(row, col).data(new_values).draw(false);
                if (NEW_ARRV_DT != null) {
                    tableMove.page(page.page).cell(row, 8).data(NEW_ARRV_DT).draw(false);
                }
            } else {
                console.log("Invalid row index:", indexMove);
            }
        } else {
            var page = tableMove.page.info();
            tableMove.page(page.page).cell(row, col).data("").draw(false);
        }

    }

    function CheckMovement(key, new_values) {
        var duplicate = 0;
        for (var i = 0; i < tableMove.data().length; i++) {
            if (tableMove.data()[i].BRDR_ID != "" && tableMove.data()[i].UK_KEY != key && new_values == tableMove.data()[i].BRDR_ID) {
                console.log("Dup: "+new_values + "|" + tableMove.data()[i].BRDR_ID);
                duplicate = duplicate + 1;
            }
        }

        if (duplicate > 0) {
            Swal.fire({
                icon: "error",
                title: 'Duplicate!',
                text: "You won't able to select this!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
            return true;
        } else {
            return false;
        }
    }

    function EditMovement(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $(btn).attr('hsg');
        var ndt = $(btn).attr('ndt');
        var mdt = $(btn).attr('mdt');
        var net = $(btn).attr('net');
        var gnd = $(btn).attr('gnd');
        var key = id.split('--')[1];
        $("#BT-ADD_MOVE").val(key);
        $("#BT-ADD_MOVE").attr({ 'hsg': hsg, 'sit': sit, 'mdt': mdt, 'net': net, 'gnd': gnd,'ndt':ndt });
        $("#SIT").val(sit);
        $("#HSG").val(hsg);
        $("#MDT").val(mdt);

        if (idEvent == id) {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $('#tb_main').find('input, select, textarea').prop('disabled', false);
            $('#SAVE_MAIN').prop('disabled', false);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            idEvent = "";
        } else {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $($("#I" + id).parent()).removeClass('normal').addClass('btn-primary');
            $('#tb_main').find('input, select, textarea').prop('disabled', true);
            $('#SAVE_MAIN').prop('disabled', true);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', false);
            $("html, body").animate({ scrollTop: $('#container1').offset().top }, 50);
            idEvent = id;
        }

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_SELECT_BRDR_MVMT",
            dataType: "json",
            cache: false,
            data: { UK_KEY: key, SITE_ID: sit, HSG_ID: hsg, MVMT_DT: mdt, GND: gnd },
            success: function (data) {
                HSG_LIST = data.HSG_LIST;
                BRDR_LIST = data.BRDR_LIST;
                var BRDR_MVMT = data.BRDR_MVMT;
                tableMove.clear().draw();
                tableMove.rows.add(BRDR_MVMT).draw();
                MoveReGenerate();
            },
            error: function () {
                errorAlert.init();
            }
        });

    }

    function AddMovement(btn) {
        var key = $("#BT-ADD_MOVE").val();
        var sit_id = $(btn).attr('sit');
        var hsg_id = $(btn).attr('hsg');
        var gnd = $(btn).attr('gnd');
        var move_dt = $(btn).attr('mdt');
        var net_qty = $(btn).attr('net');
        var new_dt = $(btn).attr('ndt');

        var dateObj = new Date(move_dt);
        var unixTimestamp = dateObj.getTime();
        var jsonDate = `/Date(${unixTimestamp})/`;

        var dateObj2 = new Date(new_dt);
        var unixTimestamp2 = dateObj2.getTime();
        var jsonDate2 = `/Date(${unixTimestamp2})/`;

        if (tableMove.data().length < net_qty) {
            $.ajax({
                type: "POST",
                url: pathServer + "/MAT/HSGMATDT01_ADD_CHECK_MVMT",
                dataType: "json",
                cache: false,
                data: { SITE_ID: sit_id, HSG_ID: hsg_id, GND: gnd, TXN_DT: move_dt },
                success: function (data) {
                    if (data == true) {
                        tableMove.row.add({
                            "UK_KEY": key,
                            "GND": gnd,
                            "SITE_ID": sit_id,
                            "HSG_ID": hsg_id,
                            "BRDR_ID": "",
                            "DEST_HSG_ID": "",
                            "DEST_HSG_DT": jsonDate,
                            "NEW_ARRV_DT": null
                        }).draw(false);
                        MoveReGenerate();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: 'Not current!',
                            text: "ไม่สามารถเพิ่มได้เนื่องจากไม่สอดคล้องกับยอดปัจจุบัน!",
                            showCancelButton: false,
                            confirmButtonText: 'OK',
                        });
                    }
                },
                error: function () {
                    errorAlert.init();
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Maximum!',
                text: "จำนวนสุกรไม่เพืยงพอสำหรับรายการโอนย้าย!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }

    }

    function DelMovement(btn) {
        var id = $(btn).attr('id');
        var idx = $(btn).attr('idx');
        var key = id.split('--')[1] + "--" + id.split('--')[2];

        var indexHead = tableMove
            .rows()
            .indexes()
            .filter(function (value, index) {
                console.log(key + "|" + tableMove.row(value).data().UK_KEY);
                return key === tableMove.row(value).data().UK_KEY;
            }); // หา row ที่ต้องการจะลบ

        var sit = tableMove.row(indexHead).data().SITE_ID;
        var hsg = tableMove.row(indexHead).data().DEST_HSG_ID;
        var gnd = tableMove.row(indexHead).data().GND;
        var mdt = resJsonToDate(tableMove.row(indexHead).data().DEST_HSG_DT);
        var ndt = resJsonToDate(tableMove.row(indexHead).data().NEW_ARRV_DT);
        var brd = tableMove.row(indexHead).data().BRDR_ID;

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_REVERT_CHECK_MVMT",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, GND: gnd, MVMT_DT:mdt, NEW_ARRV_DT: ndt, BRDR_ID: brd },
            success: function (data) {
                if (data == true) {
                    Swal.fire({
                        icon: "warning",
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            tableMove.rows(indexHead).remove().draw(); // ลบ row ที่ค้นหา
                            MoveReGenerate();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: 'Not current!',
                        text: "ไม่สามารถแก้ใขได้เนื่องจากสุกรกรที่เลือกไม่ปรากฏอยู่ในเล้าปลายทางหรือสถานะเปลี่ยนไปแล้ว!",
                        showCancelButton: false,
                        confirmButtonText: 'OK',
                    });
                }
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    function MoveReGenerate() {
        // Get current page info for later use
        var pageInfo = tableMove.page.info();

        // Update UK_KEY for each row based on new indices
        tableMove.rows().every(function (index) {
            // Get the data for the current row
            var rowData = this.data();

            // Generate new UK_KEY by removing the previous suffix and appending new index
            var newUK_KEY = String(rowData.UK_KEY).split('--')[0] + "--" + (index + 1);
            rowData.UK_KEY = newUK_KEY; // Update UK_KEY in row data

            // Update the row with the modified data
            this.data(rowData);
        });

        // Redraw the table on the same page without triggering a full reset
        tableMove.page(pageInfo.page).draw(false);
    }

    function EditLost(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $(btn).attr('hsg');
        var ndt = $(btn).attr('ndt');
        var ldt = $(btn).attr('ldt');
        var gnd = $(btn).attr('gnd');

        var net_qty = $(btn).attr('net');
        var key = id.split('--')[1];
        $("#SIT_L").val(sit);
        $("#HSG_L").val(hsg);
        $("#LDT_L").val(ldt);

        $("#BT-ADD_LOST").val(key);
        $("#BT-ADD_LOST").attr({ 'hsg': hsg, 'sit': sit, 'ldt': ldt, 'net': net_qty, 'gnd': gnd });

        if (idEvent == id) {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $('#tb_main').find('input, select, textarea').prop('disabled', false);
            $('#SAVE_MAIN').prop('disabled', false);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            idEvent = "";
        } else {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $($("#I" + id).parent()).removeClass('normal').addClass('btn-primary');
            $('#tb_main').find('input, select, textarea').prop('disabled', true);
            $('#SAVE_MAIN').prop('disabled', true);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', false);
            $("#container1").prop('hidden', true);
            $("html, body").animate({ scrollTop: $('#container2').offset().top }, 50);
            idEvent = id;
        }

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_SELECT_BRDRLOST",
            dataType: "json",
            cache: false,
            data: { UK_KEY: key, SITE_ID: sit, HSG_ID: hsg, LOST_DT: ldt,GND:gnd,NEW_DT:ndt },
            success: function (data) {
                BRDR_LIST = data.BRDR_LIST;
                var BRDR_LOST = data.BRDR_LOST;
                tableLost.clear().draw();
                tableLost.rows.add(BRDR_LOST).draw();
                LostReGenerate()
            },
            error: function () {
                errorAlert.init();
            }
        });

    }
    function AddLost(btn) {
        var net_qty = $(btn).attr('net');
        var key = $("#BT-ADD_LOST").val();
        var sit_id = $(btn).attr('sit');
        var hsg_id = $(btn).attr('hsg');
        var lost_dt = $(btn).attr('ldt');
        var gnd = $(btn).attr('gnd');
        var dateObj = new Date(lost_dt);
        var unixTimestamp = dateObj.getTime();
        var jsonDate = `/Date(${unixTimestamp})/`;
        if (tableLost.data().length < net_qty) {
            $.ajax({
                type: "POST",
                url: pathServer + "/MAT/HSGMATDT01_ADD_CHECK_LOST",
                dataType: "json",
                cache: false,
                data: { SITE_ID: sit_id, HSG_ID: hsg_id, GND: gnd, MVMT_DT: lost_dt },
                success: function (data) {
                    if (data == true) {
                        tableLost.row.add({
                            "UK_KEY": key,
                            "BRDR_LOST_SK": "",
                            "USR_ID": "",
                            "SITE_ID": sit_id,
                            "HSG_ID": hsg_id,
                            "GND": gnd,
                            "RCRD_DT": "",
                            "LOST_DT": jsonDate,
                            "BRDR_ID": "",
                            "LOST_TP": 0,
                            "CAUS_1": "",
                            "CAUS_2": "",
                            "CAUS_3": ""
                        }).draw(false);
                        LostReGenerate();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: 'Not current!',
                            text: "ไม่สามารถเพิ่มได้เนื่องจากไม่สอดคล้องกับยอดรับรู้ ณ ปัจจุบัน!",
                            showCancelButton: false,
                            confirmButtonText: 'OK',
                        });
                    }
                },
                error: function () {
                    errorAlert.init();
                }
            });

        } else {
            Swal.fire({
                icon: "error",
                title: 'Maximum!',
                text: "จำนวนสุกรไม่เพืยงพอสำหรับรายการตายหรือคัดทิ้ง!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    }
    function ModifyDirectlyLost(btn) {
        var id = $(btn).attr('id');

        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var new_values = $("#" + id).val();
        var key = id.split('--')[1] + '--' + id.split('--')[2];

        console.log("New: " + new_values);
        if (CheckLost(key, new_values) == false) {

            var indexLost = tableLost
                .rows()
                .indexes()
                .filter(function (value, index) {
                    return key === tableLost.row(value).data().UK_KEY;
                });

            if (indexLost !== undefined && tableLost.row(indexLost).length > 0) {
                var page = tableLost.page.info();
                tableLost.page(page.page).cell(row, col).data(new_values).draw(false);
            } else {
                console.log("Invalid row index:", indexLost);
            }
        } else {
            var page = tableLost.page.info();
            tableLost.page(page.page).cell(row, col).data("").draw(false);
        }
    }
    function ModifyInDirectlyLost(btn) {
        var id = $(btn).attr('id');
        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var new_values = $("#" + id).val();
        var key = id.split('--')[1] + '--' + id.split('--')[2];

        var member = 0;
        if ($("#CAUS1--" + key).is(":checked")) {
            member++;
            //console.log("New: " + $("#CAUS1--" + key).val());
        }
        if ($("#CAUS2--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS3--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS4--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS5--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS6--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS7--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS8--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS9--" + key).is(":checked")) {
            member++;
        }
        if ($("#CAUS10--" + key).is(":checked")) {
            member++;
        }
        var indexLost = tableLost
            .rows()
            .indexes()
            .filter(function (value, index) {
                return key === tableLost.row(value).data().UK_KEY;
            });
        if (member <= 3) {
            if ($("#" + id).is(":checked")) {
                if (tableLost.row(indexLost).data().CAUS_1 == "" || tableLost.row(indexLost).data().CAUS_1 == null) {
                    col = 10;
                } else if (tableLost.row(indexLost).data().CAUS_2 == "" || tableLost.row(indexLost).data().CAUS_2 == null) {
                    col = 11;
                } else if (tableLost.row(indexLost).data().CAUS_3 == "" || tableLost.row(indexLost).data().CAUS_3 == null) {
                    col = 12;
                }

                if (indexLost !== undefined && tableLost.row(indexLost).length > 0) {
                    var page = tableLost.page.info();
                    tableLost.page(page.page).cell(row, col).data(new_values).draw(false);
                } else {
                    console.log("Invalid row index:", indexLost);
                }

            } else {
                if ($("#" + id).val() == tableLost.row(indexLost).data().CAUS_1) {
                    col = 10;
                } else if ($("#" + id).val() == tableLost.row(indexLost).data().CAUS_2) {
                    col = 11;
                } else if ($("#" + id).val() == tableLost.row(indexLost).data().CAUS_3) {
                    col = 12;
                }

                if (indexLost !== undefined && tableLost.row(indexLost).length > 0) {
                    var page = tableLost.page.info();
                    tableLost.page(page.page).cell(row, col).data("").draw(false);
                } else {
                    console.log("Invalid row index:", indexLost);
                }

            }
            console.log(tableLost.row(indexLost).data().CAUS_1 + "|" + tableLost.row(indexLost).data().CAUS_2 + "|" + tableLost.row(indexLost).data().CAUS_3);
        } else {
            $("#" + id).prop("checked", false);
            Swal.fire({
                icon: "error",
                title: '3 Reason Of Limitation!',
                text: "You won't able to select more!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    }

    function DelLost(btn) {
        var id = $(btn).attr('id');
        var idx = $(btn).attr('idx');
        var key = id.split('--')[1] + "--" + id.split('--')[2];

        var indexHead = tableLost
            .rows()
            .indexes()
            .filter(function (value, index) {
                console.log(key + "|" + tableLost.row(value).data().UK_KEY);
                return key === tableLost.row(value).data().UK_KEY;
            }); // หา row ที่ต้องการจะลบ

        var sit = tableLost.row(indexHead).data().SITE_ID;
        var hsg = tableLost.row(indexHead).data().HSG_ID;
        var gnd = tableLost.row(indexHead).data().GND;
        var mdt = resJsonToDate(tableLost.row(indexHead).data().LOST_DT);
        var brd = tableLost.row(indexHead).data().BRDR_ID;
        var ltp = tableLost.row(indexHead).data().LOST_TP;

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_REVERT_CHECK_LOST",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, GND: gnd, MVMT_DT: mdt, BRDR_ID: brd, LOST_TP: ltp },
            success: function (data) {
                if (data == true) {
                    Swal.fire({
                        icon: "warning",
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            tableLost.rows(indexHead).remove().draw(); // ลบ row ที่ค้นหา
                            LostReGenerate();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: 'Not current!',
                        text: "ไม่สามารถแก้ใขได้เนื่องจากไม่สอดคล้องกับปัจจุบัน!",
                        showCancelButton: false,
                        confirmButtonText: 'OK',
                    });
                }
            },
            error: function () {
                errorAlert.init();
            }
        });

    }
    function CheckLost(key, new_values) {
        var duplicate = 0;
        for (var i = 0; i < tableLost.data().length; i++) {
            if (tableLost.data()[i].BRDR_ID != "" && tableLost.data()[i].UK_KEY != key && new_values == tableLost.data()[i].BRDR_ID) {
                console.log("Dup: " + new_values + "|" + tableLost.data()[i].BRDR_ID);
                duplicate = duplicate + 1;
            }
        }

        if (duplicate > 0) {
            Swal.fire({
                icon: "error",
                title: 'Duplicate!',
                text: "You won't able to select this!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
            return true;
        } else {
            return false;
        }
    }
    function LostReGenerate() {
        var pageInfo = tableLost.page.info();
        tableLost.rows().every(function (index) {
            var rowData = this.data();
            var newUK_KEY = String(rowData.UK_KEY).split('--')[0] + "--" + (index + 1);
            rowData.UK_KEY = newUK_KEY; // Update UK_KEY in row data
            this.data(rowData);
        });
        tableLost.page(pageInfo.page).draw(false);
    }

    function EditInsmn(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $(btn).attr('hsg');
        var idt = $(btn).attr('idt');
        var gnd = $(btn).attr('gnd');

        var key = id.split('--')[1];
        var net_qty = $(btn).attr('net');
        $("#BT-ADD_INSMN").val(key);
        $("#BT-ADD_INSMN").attr({ 'hsg': hsg, 'sit': sit, 'idt': idt, 'gnd': gnd,'net':net_qty });

        if (idEvent == id) {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $('#tb_main').find('input, select, textarea').prop('disabled', false);
            $('#SAVE_MAIN').prop('disabled', false);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            idEvent = "";
        } else {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $($("#I" + id).parent()).removeClass('normal').addClass('btn-primary');
            $('#tb_main').find('input, select, textarea').prop('disabled', true);
            $('#SAVE_MAIN').prop('disabled', true);
            $("#container4").prop('hidden', false);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            $("html, body").animate({ scrollTop: $('#container4').offset().top }, 50);
            idEvent = id;
        }
        $("#SIT_I").val(sit);
        $("#HSG_I").val(hsg);
        $("#IDT_I").val(idt);
        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_SELECT_BRDR_INSMN",
            dataType: "json",
            cache: false,
            data: { UK_KEY: key, SITE_ID: sit, HSG_ID: hsg, INSMN_DT: idt, GND: gnd },
            success: function (data) {
                BRDR_LIST = data.BRDR_LIST;
                var BRDR_INSMN = data.BRDR_INSMN;
                tableInsmn.clear().draw();
                tableInsmn.rows.add(BRDR_INSMN).draw();
                InsmnReGenerate()
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    function AddInsmn(btn) {
        var net_qty = $(btn).attr('net');
        var key = $("#BT-ADD_INSMN").val();
        var sit_id = $(btn).attr('sit');
        var hsg_id = $(btn).attr('hsg');
        var insmn_dt = $(btn).attr('idt');
        var gnd = $(btn).attr('gnd');
        var dateObj = new Date(insmn_dt);
        var unixTimestamp = dateObj.getTime();
        var jsonDate = `/Date(${unixTimestamp})/`;
        if (tableInsmn.data().length < net_qty) {
            $.ajax({
                type: "POST",
                url: pathServer + "/MAT/HSGMATDT01_ADD_CHECK_INSMN",
                dataType: "json",
                cache: false,
                data: { SITE_ID: sit_id, HSG_ID: hsg_id, GND: gnd, MVMT_DT: insmn_dt },
                success: function (data) {
                    if (data == true) {
                        tableInsmn.row.add({
                            "UK_KEY": key,
                            "AVY_BRDR_INSMN_SK": "",
                            "AVY_BRDR_INSMN_ID": "",
                            "SITE_ID": sit_id,
                            "HSG_ID": hsg_id,
                            "INSMN_DT": jsonDate,
                            "GND": gnd,
                            "BRDR_FML_ID": "",
                            "GGP_F": 0,
                            "BRDR_ML_ID": "",
                            "INSMN_ST": "",
                            "CAUS": ""
                        }).draw(false);
                        InsmnReGenerate();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: 'Not current!',
                            text: "ไม่สามารถเพิ่มได้เนื่องจากรายการไม่เป็นปัจจุบัน!",
                            showCancelButton: false,
                            confirmButtonText: 'OK',
                        });
                    }
                },
                error: function () {
                    errorAlert.init();
                }
            });

        } else {
            Swal.fire({
                icon: "error",
                title: 'Maximum!',
                text: "จำนวนสุกรไม่เพืยงพอสำหรับรายการผสม!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    }
    function InsmnReGenerate() {
        var pageInfo = tableInsmn.page.info();
        tableInsmn.rows().every(function (index) {
            var rowData = this.data();
            var newUK_KEY = String(rowData.UK_KEY).split('--')[0] + "--" + (index + 1);
            rowData.UK_KEY = newUK_KEY; // Update UK_KEY in row data
            this.data(rowData);
        });
        tableInsmn.page(pageInfo.page).draw(false);
    }

    function ModifyDirectlyInsmn(btn) {
        var id = $(btn).attr('id');

        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var new_values = $("#" + id).val();
        var key = id.split('--')[1] + '--' + id.split('--')[2];

        console.log("New: " + new_values);
        if (CheckInsmn(key, new_values) == false) {

            var indexInsmn = tableInsmn
                .rows()
                .indexes()
                .filter(function (value, index) {
                    return key === tableInsmn.row(value).data().UK_KEY;
                });

            if (indexInsmn !== undefined && tableInsmn.row(indexInsmn).length > 0) {
                var page = tableInsmn.page.info();
                tableInsmn.page(page.page).cell(row, col).data(new_values).draw(false);
                if (id.split('--')[0] == "BRDR_FML_ID") {
                    if (new_values != "") {
                        $.ajax({
                            type: "POST",
                            url: pathServer + "/MAT/BRDR_DETAIL",
                            dataType: "json",
                            cache: false,
                            data: { BRDR_ID: new_values },
                            success: function (data) {
                                tableInsmn.page(page.page).cell(row, 9).data(data.BRDR.GGP_F).draw(false);
                            },
                            error: function () {
                                errorAlert.init();
                            }
                        });
                    } else {
                        tableInsmn.page(page.page).cell(row, 9).data(0).draw(false);
                    }
                }
            } else {
                console.log("Invalid row index:", indexInsmn);
            }
        } else {
            var page = tableInsmn.page.info();
            tableInsmn.page(page.page).cell(row, col).data("").draw(false);
        }
    }

    function CheckInsmn(key, new_values) {
        var duplicate = 0;
        for (var i = 0; i < tableInsmn.data().length; i++) {
            if (tableInsmn.data()[i].BRDR_FML_ID != "" && tableInsmn.data()[i].UK_KEY != key && new_values == tableInsmn.data()[i].BRDR_FML_ID) {
                console.log("Dup: " + new_values + "|" + tableInsmn.data()[i].BRDR_FML_ID);
                duplicate = duplicate + 1;
            }
        }

        if (duplicate > 0) {
            Swal.fire({
                icon: "error",
                title: 'Duplicate!',
                text: "You won't able to select this!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
            return true;
        } else {
            return false;
        }
    }
    function DelInsmn(btn) {
        var id = $(btn).attr('id');
        var idx = $(btn).attr('idx');
        var key = id.split('--')[1] + "--" + id.split('--')[2];

        var indexHead = tableInsmn
            .rows()
            .indexes()
            .filter(function (value, index) {
                console.log(key + "|" + tableInsmn.row(value).data().UK_KEY);
                return key === tableInsmn.row(value).data().UK_KEY;
            }); // หา row ที่ต้องการจะลบ

        var sit = tableInsmn.row(indexHead).data().SITE_ID;
        var hsg = tableInsmn.row(indexHead).data().HSG_ID;
        var gnd = tableInsmn.row(indexHead).data().GND;
        var mdt = resJsonToDate(tableInsmn.row(indexHead).data().INSMN_DT);
        var brd = tableInsmn.row(indexHead).data().BRDR_FML_ID;

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_REVERT_CHECK_INSMN",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, GND: gnd, MVMT_DT: mdt, BRDR_ID: brd },
            success: function (data) {
                if (data == true) {
                    Swal.fire({
                        icon: "warning",
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            tableInsmn.rows(indexHead).remove().draw(); // ลบ row ที่ค้นหา
                            InsmnReGenerate();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: 'Not current!',
                        text: "ไม่สามารถแก้ใขได้เนื่องจากไม่สอดคล้องกับปัจจุบัน!",
                        showCancelButton: false,
                        confirmButtonText: 'OK',
                    });
                }
            },
            error: function () {
                errorAlert.init();
            }
        });

    }

    function EditInsmnSt(btn) {
        var id = $(btn).attr('id');
        var sit = $(btn).attr('sit');
        var hsg = $(btn).attr('hsg');
        var idt = $(btn).attr('idt');
        var gnd = $(btn).attr('gnd');

        var key = id.split('--')[1];
        var net_qty = $(btn).attr('net');
        $("#BT-ADD_INSMNST").val(key);
        $("#BT-ADD_INSMNST").attr({ 'hsg': hsg, 'sit': sit, 'idt': idt, 'gnd': gnd, 'net': net_qty });

        if (idEvent == id) {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $('#tb_main').find('input, select, textarea').prop('disabled', false);
            $('#SAVE_MAIN').prop('disabled', false);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', true);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            idEvent = "";
        } else {
            $($(".btn_edit").parent()).removeClass('btn-primary').addClass('normal');
            $($("#I" + id).parent()).removeClass('normal').addClass('btn-primary');
            $('#tb_main').find('input, select, textarea').prop('disabled', true);
            $('#SAVE_MAIN').prop('disabled', true);
            $("#container4").prop('hidden', true);
            $("#container3").prop('hidden', false);
            $("#container2").prop('hidden', true);
            $("#container1").prop('hidden', true);
            $("html, body").animate({ scrollTop: $('#container3').offset().top }, 50);
            idEvent = id;
        }
        $("#SIT_IST").val(sit);
        $("#HSG_IST").val(hsg);
        $("#IDT_IST").val(idt);
        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_SELECT_BRDR_INSMNST",
            dataType: "json",
            cache: false,
            data: { UK_KEY: key, SITE_ID: sit, HSG_ID: hsg, INSMN_DT: idt, GND: gnd },
            success: function (data) {
                BRDR_LIST = data.BRDR_LIST;
                var BRDR_INSMNST = data.BRDR_INSMN;
                tableInsmnSt.clear().draw();
                tableInsmnSt.rows.add(BRDR_INSMNST).draw();
                InsmnStReGenerate()
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    function AddInsmnSt(btn) {
        var net_qty = $(btn).attr('net');
        var key = $("#BT-ADD_INSMNST").val();
        var sit_id = $(btn).attr('sit');
        var hsg_id = $(btn).attr('hsg');
        var insmn_dt = $(btn).attr('idt');
        var gnd = $(btn).attr('gnd');
        var dateObj = new Date(insmn_dt);
        var unixTimestamp = dateObj.getTime();
        var jsonDate = `/Date(${unixTimestamp})/`;
        if (tableInsmnSt.data().length < net_qty) {
            $.ajax({
                type: "POST",
                url: pathServer + "/MAT/HSGMATDT01_ADD_CHECK_INSMNST",
                dataType: "json",
                cache: false,
                data: { SITE_ID: sit_id, HSG_ID: hsg_id, GND: gnd, MVMT_DT: insmn_dt },
                success: function (data) {
                    if (data == true) {
                        tableInsmnSt.row.add({
                            "UK_KEY": key,
                            "AVY_BRDR_INSMN_SK": "",
                            "AVY_BRDR_INSMN_ID": "",
                            "SITE_ID": sit_id,
                            "HSG_ID": hsg_id,
                            "INSMN_DT": jsonDate,
                            "GND": gnd,
                            "BRDR_FML_ID": "",
                            "GGP_F": 0,
                            "BRDR_ST": 6,
                        }).draw(false);
                        InsmnStReGenerate();
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: 'Not current!',
                            text: "ไม่สามารถเพิ่มได้เนื่องจากรายการไม่เป็นปัจจุบัน!",
                            showCancelButton: false,
                            confirmButtonText: 'OK',
                        });
                    }
                },
                error: function () {
                    errorAlert.init();
                }
            });

        } else {
            Swal.fire({
                icon: "error",
                title: 'Maximum!',
                text: "จำนวนสุกรไม่เพืยงพอสำหรับรายการมีปัญหาหลังผสม!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    }
    function InsmnStReGenerate() {
        var pageInfo = tableInsmnSt.page.info();
        tableInsmnSt.rows().every(function (index) {
            var rowData = this.data();
            var newUK_KEY = String(rowData.UK_KEY).split('--')[0] + "--" + (index + 1);
            rowData.UK_KEY = newUK_KEY; // Update UK_KEY in row data
            this.data(rowData);
        });
        tableInsmnSt.page(pageInfo.page).draw(false);
    }

    function ModifyDirectlyInsmnSt(btn) {
        var id = $(btn).attr('id');

        var row = $(btn).attr('row');
        var col = $(btn).attr('col');
        var new_values = $("#" + id).val();
        var key = id.split('--')[1] + '--' + id.split('--')[2];

        console.log("New: " + new_values);
        if (CheckInsmnSt(key, new_values) == false) {

            var indexInsmnSt = tableInsmnSt
                .rows()
                .indexes()
                .filter(function (value, index) {
                    return key === tableInsmnSt.row(value).data().UK_KEY;
                });

            if (indexInsmnSt !== undefined && tableInsmnSt.row(indexInsmnSt).length > 0) {
                var page = tableInsmnSt.page.info();
                if (id.split('--')[0] == "BRDR_FML_ID") {
                    tableInsmnSt.page(page.page).cell(row, col).data(new_values).draw(false);
                    if (new_values != "") {
                        $.ajax({
                            type: "POST",
                            url: pathServer + "/MAT/BRDR_DETAIL",
                            dataType: "json",
                            cache: false,
                            data: { BRDR_ID: new_values },
                            success: function (data) {
                                tableInsmnSt.page(page.page).cell(row, 9).data(data.BRDR.GGP_F).draw(false);
                            },
                            error: function () {
                                errorAlert.init();
                            }
                        });
                    } else {
                        tableInsmnSt.page(page.page).cell(row, 9).data(0).draw(false);
                    }
                } else if (id.split('--')[0] == "BRDR_ST0" || id.split('--')[0] == "BRDR_ST1" || id.split('--')[0] == "BRDR_ST2") {
                    tableInsmnSt.page(page.page).cell(row, 10).data(new_values).draw(false);
                }
            } else {
                console.log("Invalid row index:", indexInsmnSt);
            }
        } else {
            var page = tableInsmnSt.page.info();
            tableInsmnSt.page(page.page).cell(row, col).data("").draw(false);
        }
    }

    function CheckInsmnSt(key, new_values) {
        var duplicate = 0;
        for (var i = 0; i < tableInsmnSt.data().length; i++) {
            if (tableInsmnSt.data()[i].BRDR_FML_ID != "" && tableInsmnSt.data()[i].UK_KEY != key && new_values == tableInsmnSt.data()[i].BRDR_FML_ID) {
                console.log("Dup: " + new_values + "|" + tableInsmnSt.data()[i].BRDR_FML_ID);
                duplicate = duplicate + 1;
            }
        }

        if (duplicate > 0) {
            Swal.fire({
                icon: "error",
                title: 'Duplicate!',
                text: "You won't able to select this!",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
            return true;
        } else {
            return false;
        }
    }
    function DelInsmnSt(btn) {
        var id = $(btn).attr('id');
        var idx = $(btn).attr('idx');
        var key = id.split('--')[1] + "--" + id.split('--')[2];

        var indexHead = tableInsmnSt
            .rows()
            .indexes()
            .filter(function (value, index) {
                console.log(key + "|" + tableInsmnSt.row(value).data().UK_KEY);
                return key === tableInsmnSt.row(value).data().UK_KEY;
            }); // หา row ที่ต้องการจะลบ

        var sit = tableInsmnSt.row(indexHead).data().SITE_ID;
        var hsg = tableInsmnSt.row(indexHead).data().HSG_ID;
        var gnd = tableInsmnSt.row(indexHead).data().GND;
        var mdt = resJsonToDate(tableInsmnSt.row(indexHead).data().INSMN_DT);
        var brd = tableInsmnSt.row(indexHead).data().BRDR_FML_ID;

        $.ajax({
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_REVERT_CHECK_INSMNST",
            dataType: "json",
            cache: false,
            data: { SITE_ID: sit, HSG_ID: hsg, GND: gnd, MVMT_DT: mdt, BRDR_ID: brd },
            success: function (data) {
                if (data == true) {
                    Swal.fire({
                        icon: "warning",
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            tableInsmnSt.rows(indexHead).remove().draw(); // ลบ row ที่ค้นหา
                            InsmnStReGenerate();
                        }
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: 'Not current!',
                        text: "ไม่สามารถแก้ใขได้เนื่องจากไม่สอดคล้องกับปัจจุบัน!",
                        showCancelButton: false,
                        confirmButtonText: 'OK',
                    });
                }
            },
            error: function () {
                errorAlert.init();
            }
        });

    }

    $("#SAVE_MAIN").click(function () {
        if ($("#searchDate").val() != "") {
            Swal.fire({
                icon: "question",
                title: 'Do you want to save?',
                text: "Are you sure to create this data",
                showCancelButton: true,
                confirmButtonText: 'Yes',
            }).then((result) => {
                if (result.isConfirmed) {
                    saveMain();
                }
            });
        } else {
            if ($("#searchDate").val() == "") {
                $($(searchDate).parent()).addClass('alert-validate-date');
            }
        }
    });

    function saveMain() {
        var TXN_HSG_MATE = new Array();
        var HSG_TEMP_HMD = new Array();
        for (var i = 0; i < tableMain.data().length; i++) {
            let tbmate = {};
            var tb_tmp = {};
            var net = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
            if (net > 0) {
                tbmate.DOC_CODE = tableMain.data()[i].UK_KEY;
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.FM_FRRW_QTY = tableMain.data()[i].FM_FRRW_QTY;
                tbmate.FM_RPLCMT_QTY = tableMain.data()[i].FM_RPLCMT_QTY;
                tbmate.NET_QTY = net;
                TXN_HSG_MATE.push(tbmate);
            }


            tb_tmp.SITE_ID = tableMain.data()[i].SITE_ID;
            tb_tmp.HSG_ID = tableMain.data()[i].HSG_ID;
            tb_tmp.TXN_DT = $("#searchDate").val();
            tb_tmp.TEMP_MNNG = tableMain.data()[i].TEMP_MNNG;
            tb_tmp.TEMP_EVNNG = tableMain.data()[i].TEMP_EVNNG;
            tb_tmp.TEMP_AVG = tableMain.data()[i].TEMP_AVG;
            tb_tmp.HMD_MNNG = tableMain.data()[i].HMD_MNNG;
            tb_tmp.HMD_EVNNG = tableMain.data()[i].HMD_EVNNG;
            tb_tmp.HMD_AVG = tableMain.data()[i].HMD_AVG;
            HSG_TEMP_HMD.push(tb_tmp);
        }

        //console.log(TXN_HSG_NRSRY);
        $.ajax({
            contentType: "application/json; charset=utf-8",// กำหนด content สำหรับส่งข้อมูลแบบ object or list
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_INSERT",
            dataType: "json",
            data: JSON.stringify({ TXN_HSG_MATE: TXN_HSG_MATE, HSG_TEMP_HMD: HSG_TEMP_HMD }), //parameter Object,List
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                let timerInterval;
                xhr_loading(xhr);
                clearInterval(timerInterval);
                return xhr;
            },
            success: function (data) {

                clearInterval(interVal);
                $('#progress').css('width', 100 + "%");
                //successMessage.init();
                setTimeout(function () {
                    //Attach_File();
                    Swal.fire({
                        icon: "success",
                        title: 'Your data has been saved', //"Your data has been saved"
                        showConfirmButton: true,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        SelectTbMain();
                        location.reload();
                    });
                }, 1500);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    $("#saveMovement").click(function () {
        var BRDR_ID = true;
        var DEST_HSG_ID = true;
        tableMove.rows().every(function (index) {
            var rowData = this.data();
            if (rowData.BRDR_ID == "") {
                BRDR_ID = false;
            }
            if (rowData.DEST_HSG_ID == "") {
                DEST_HSG_ID = false;
            }
        });

        if (BRDR_ID == true && DEST_HSG_ID == true) {
            Swal.fire({
                icon: "question",
                title: 'Do you want to save?',
                text: "Are you sure to Add movement",
                showCancelButton: true,
                confirmButtonText: 'Yes',
            }).then((result) => {
                if (result.isConfirmed) {
                    saveMovement();
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Empty!',
                text: "กรุณาเลือกข้อมูลการย้ายให้ครบถ้วนหรือลบออก",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    });

    function saveMovement() {
        var BRDR_MVMT = new Array();
        var TXN_HSG_MATE_INCREASE = new Array();
        var TXN_HSG_MATE_REDUCE = new Array();
        var TXN_HSG_MATE = new Array();
        var BRDR_MVMT_DEL = {};
        var TFR_QTY = 0;
        var ORIGIN = "";
        var GND = "";
        var NEW_ARRV_DT = "";


        for (var i = 0; i < tableMove.data().length; i++) {


            let tbmove = {};
            tbmove.DOC_CODE = tableMove.data()[i].UK_KEY.split('--')[0];
            tbmove.NEW_ARRV_DT = resJsonToDate(tableMove.data()[i].NEW_ARRV_DT);
            tbmove.MVMT_DT = $("#searchDate").val();
            tbmove.SITE_ID = tableMove.data()[i].SITE_ID;
            tbmove.HSG_ID = tableMove.data()[i].HSG_ID;
            tbmove.BRDR_ID = tableMove.data()[i].BRDR_ID;
            tbmove.DEST_HSG_ID = tableMove.data()[i].DEST_HSG_ID;
            tbmove.DEST_HSG_DT = resJsonToDate(tableMove.data()[i].DEST_HSG_DT);
            BRDR_MVMT.push(tbmove);

            TFR_QTY++;
            ORIGIN = tableMove.data()[i].HSG_ID;
            GND = tableMove.data()[i].GND;
        }

        for (var i = 0; i < tableMain.data().length; i++) {
            var net = (tableMain.data()[i].BALANCE_QTY + numeral(tableMain.data()[i].FM_FRRW_QTY)._value + numeral(tableMain.data()[i].FM_RPLCMT_QTY)._value + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
            if (net > 0) {
                let tbmate = {};
                tbmate.DOC_CODE = tableMain.data()[i].UK_KEY;
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.NEW_ARRV_DT = resJsonToDate(tableMain.data()[i].NEW_ARRV_DT);
                tbmate.NET_QTY = net;
                TXN_HSG_MATE.push(tbmate);
            }
        }
        for (var i = 0; i < tableMain.data().length; i++) {
            //console.log(TFR_QTY);
            if (tableMain.data()[i].HSG_ID == ORIGIN && tableMain.data()[i].GND == GND) {
                let tbmate = {};
                tbmate.DOC_CODE = tableMove.data()[0].UK_KEY.split('--')[0];
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.NEW_ARRV_DT = resJsonToDate(tableMain.data()[i].NEW_ARRV_DT);
                tbmate.TFR_QTY = TFR_QTY
                tbmate.NET_QTY = (tableMain.data()[i].BALANCE_QTY + numeral(tableMain.data()[i].FM_FRRW_QTY)._value + numeral(tableMain.data()[i].FM_RPLCMT_QTY)._value + tableMain.data()[i].RCV_QTY) - (TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
                TXN_HSG_MATE_REDUCE.push(tbmate);
                //console.log(resJsonToDate(tableMain.data()[i].NEW_ARRV_DT));
                //GND = tableMain.data()[i].GND;
                NEW_ARRV_DT = resJsonToDate(tableMain.data()[i].NEW_ARRV_DT);
            }
        }


        for (var i = 0; i < tableMain.data().length; i++) {
            var DEST = false;
            var RCV_QTY = 0;
            var NET_QTY = 0;
            let tbmate = {};

            for (var n = 0; n < tableMove.data().length; n++) {
                //console.log(tableMain.data()[i].HSG_ID +"|"+ tableMove.data()[n].DEST_HSG_ID);
                if (tableMain.data()[i].HSG_ID == tableMove.data()[n].DEST_HSG_ID) {
                    DEST = true;
                    RCV_QTY++;
                    NET_QTY++;
                }
            }

            if (DEST == true) {
                if (tableMain.data()[n].UK_KEY.indexOf('--') != -1) {
                    tbmate.DOC_CODE = tableMain.data()[n].UK_KEY.split('--')[0];
                } else {
                    tbmate.DOC_CODE = tableMain.data()[n].UK_KEY + $("#searchDate").val() + GND + NEW_ARRV_DT;
                }
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = GND;
                tbmate.NEW_ARRV_DT = NEW_ARRV_DT
                tbmate.RCV_QTY = RCV_QTY;
                tbmate.NET_QTY = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
                TXN_HSG_MATE_INCREASE.push(tbmate);
            }
        }

        BRDR_MVMT_DEL.SITE_ID = $("#SIT").val();
        BRDR_MVMT_DEL.HSG_ID = $("#HSG").val();
        BRDR_MVMT_DEL.MVMT_DT = $("#MDT").val();

        $.ajax({
        contentType: "application/json; charset=utf-8",// กำหนด content สำหรับส่งข้อมูลแบบ object or list
        type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_MVMT_INSERT",
            dataType: "json",
            data: JSON.stringify({ BRDR_MVMT: BRDR_MVMT, TXN_HSG_MATE_INCREASE: TXN_HSG_MATE_INCREASE, TXN_HSG_MATE_REDUCE: TXN_HSG_MATE_REDUCE, BRDR_MVMT_DEL: BRDR_MVMT_DEL }), //parameter Object,List
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                let timerInterval;
                xhr_loading(xhr);
                clearInterval(timerInterval);
            return xhr;
        },
            success: function (data) {

            clearInterval(interVal);
            $('#progress').css('width', 100 + "%");
                //successMessage.init();
                setTimeout(function () {
                    //Attach_File();
                    Swal.fire({
                        icon: "success",
                        title: 'Your data has been saved',
                        showConfirmButton: true,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        location.reload();
                    });
                }, 1500);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    $("#saveLost").click(function () {
        var BRDR_ID = true;
        tableLost.rows().every(function (index) {
            var rowData = this.data();
            if ($("#BRDR_ID--" + rowData.UK_KEY).val() == "") {
                BRDR_ID = false;
            }
        });

        if (BRDR_ID == true) {
            Swal.fire({
                icon: "question",
                title: 'Do you want to save?',
                text: "Are you sure to Add Lost",
                showCancelButton: true,
                confirmButtonText: 'Yes',
            }).then((result) => {
                if (result.isConfirmed) {
                    saveLost();
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Empty!',
                text: "กรุณาเลือกข้อมูลการตายคัดทั้งให้ครบถ้วนหรือลบออก",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    });
    function saveLost() {
        var BRDR_LOST = new Array();
        var TXN_HSG_MATE = new Array();
        var TXN_HSG_MATE_REDUCE = new Array();
        var ORIGIN = "";
        var GND = "";
        var DIED_TOT = 0;
        var DSCRD_TOT = 0;

        for (var i = 0; i < tableLost.data().length; i++) {
            var tblost = {};
            tblost.SITE_ID = tableLost.data()[i].SITE_ID;
            tblost.HSG_ID = tableLost.data()[i].HSG_ID;
            tblost.LOST_DT = $("#searchDate").val();
            tblost.BRDR_ID = tableLost.data()[i].BRDR_ID;
            tblost.LOST_TP = tableLost.data()[i].LOST_TP;
            tblost.CAUS_1 = tableLost.data()[i].CAUS_1;
            tblost.CAUS_2 = tableLost.data()[i].CAUS_2;
            tblost.CAUS_3 = tableLost.data()[i].CAUS_3;
            BRDR_LOST.push(tblost);

            ORIGIN = tableLost.data()[i].HSG_ID;
            GND = tableLost.data()[i].GND;
            if (tableLost.data()[i].LOST_TP == 0) {
                DIED_TOT++;
            } else if (tableLost.data()[i].LOST_TP == 1) {
                DSCRD_TOT++;
            }
        }
        for (var i = 0; i < tableMain.data().length; i++) {
            var net = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
            if (net > 0) {
                let tbmate = {};
                tbmate.DOC_CODE = tableMain.data()[i].UK_KEY;
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.NET_QTY = net;
                TXN_HSG_MATE.push(tbmate);
            }
        }
        for (var i = 0; i < tableMain.data().length; i++) {

            if (tableMain.data()[i].HSG_ID == ORIGIN && tableMain.data()[i].GND == GND) {
                let tbmate = {};
                tbmate.DOC_CODE = tableLost.data()[0].UK_KEY.split('--')[0];
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.DIED_TOT = DIED_TOT;
                tbmate.DSCRD_TOT = DSCRD_TOT;
                tbmate.NET_QTY = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + DIED_TOT + DSCRD_TOT);
                TXN_HSG_MATE_REDUCE.push(tbmate);
            }
        }
        BRDR_LOST_DEL = {};
        BRDR_LOST_DEL.SITE_ID = $("#SIT_L").val();
        BRDR_LOST_DEL.HSG_ID = $("#HSG_L").val();
        BRDR_LOST_DEL.LOST_DT = $("#LDT_L").val();

        $.ajax({
            contentType: "application/json; charset=utf-8",// กำหนด content สำหรับส่งข้อมูลแบบ object or list
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_LOST_INSERT",
            dataType: "json",
            data: JSON.stringify({ TXN_HSG_MATE: TXN_HSG_MATE, BRDR_LOST: BRDR_LOST, TXN_HSG_MATE_REDUCE: TXN_HSG_MATE_REDUCE, BRDR_LOST_DEL: BRDR_LOST_DEL }), //parameter Object,List
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                let timerInterval;
                xhr_loading(xhr);
                clearInterval(timerInterval);
                return xhr;
            },
            success: function (data) {

                clearInterval(interVal);
                $('#progress').css('width', 100 + "%");
                //successMessage.init();
                setTimeout(function () {
                    //Attach_File();
                    Swal.fire({
                        icon: "success",
                        title: 'Your data has been saved',
                        showConfirmButton: true,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        location.reload();
                    });
                }, 1500);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }

    $("#saveInsmn").click(function () {
        var BRDR_ID = true;
        tableInsmn.rows().every(function (index) {
            var rowData = this.data();
            if (rowData.BRDR_FML_ID == "") {
                BRDR_ID = false;
            }
        });

        if (BRDR_ID == true) {
            Swal.fire({
                icon: "question",
                title: 'Do you want to save?',
                text: "Are you sure to Add Insmn",
                showCancelButton: true,
                confirmButtonText: 'Yes',
            }).then((result) => {
                if (result.isConfirmed) {
                    saveInsmn();
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Empty!',
                text: "กรุณาเลือกข้อมูลให้ครบถ้วนหรือลบออก",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    });
    function saveInsmn() {
        var AVY_BRDR_INSMN = new Array();
        var TXN_HSG_MATE = new Array();
        var TXN_HSG_MATE_REDUCE = new Array();
        var HSG_ID = "";
        var GND = "";
        var INSMN_TOT = 0;

        for (var i = 0; i < tableInsmn.data().length; i++) {
            var tbInsmn = {};
            tbInsmn.AVY_BRDR_INSMN_ID = tableInsmn.data()[i].AVY_BRDR_INSMN_ID;
            tbInsmn.SITE_ID = tableInsmn.data()[i].SITE_ID;
            tbInsmn.HSG_ID = tableInsmn.data()[i].HSG_ID;
            tbInsmn.INSMN_DT = $("#searchDate").val();
            tbInsmn.BRDR_FML_ID = tableInsmn.data()[i].BRDR_FML_ID;
            tbInsmn.GGP_F = tableInsmn.data()[i].GGP_F;
            tbInsmn.BRDR_ML_ID = tableInsmn.data()[i].BRDR_ML_ID;
            AVY_BRDR_INSMN.push(tbInsmn);

            HSG_ID = tableInsmn.data()[i].HSG_ID;
            GND = tableInsmn.data()[i].GND;
            INSMN_TOT++;
        }
        for (var i = 0; i < tableMain.data().length; i++) {
            if (tableMain.data()[i].HSG_ID == HSG_ID && tableMain.data()[i].GND == "X") {
                var net = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY + INSMN_TOT) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
                if (net > 0) {
                    let tbmate = {};
                    tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                    tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                    tbmate.TXN_DT = $("#searchDate").val();
                    tbmate.GND = tableMain.data()[i].GND;
                    tbmate.INSMN_TOT = INSMN_TOT;
                    tbmate.NET_QTY = net;
                    TXN_HSG_MATE.push(tbmate);
                }
            }
        }
        for (var i = 0; i < tableMain.data().length; i++) {

            if (tableMain.data()[i].HSG_ID == HSG_ID && tableMain.data()[i].GND == "F") {
                let tbmate = {};
                var net = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
                tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                tbmate.TXN_DT = $("#searchDate").val();
                tbmate.GND = tableMain.data()[i].GND;
                tbmate.INSMN_TOT = tbmate.INSMN_TOT - INSMN_TOT;
                tbmate.NET_QTY = net - INSMN_TOT;
                TXN_HSG_MATE_REDUCE.push(tbmate);
            }
        }

        AVY_BRDR_INSMN_DEL = {};
        AVY_BRDR_INSMN_DEL.SITE_ID = $("#SIT_I").val();
        AVY_BRDR_INSMN_DEL.HSG_ID = $("#HSG_I").val();
        AVY_BRDR_INSMN_DEL.INSMN_DT = $("#IDT_I").val();

        $.ajax({
            contentType: "application/json; charset=utf-8",// กำหนด content สำหรับส่งข้อมูลแบบ object or list
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_INSMN_INSERT",
            dataType: "json",
            data: JSON.stringify({ TXN_HSG_MATE: TXN_HSG_MATE, AVY_BRDR_INSMN: AVY_BRDR_INSMN, TXN_HSG_MATE_REDUCE: TXN_HSG_MATE_REDUCE, AVY_BRDR_INSMN_DEL: AVY_BRDR_INSMN_DEL }), //parameter Object,List
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                let timerInterval;
                xhr_loading(xhr);
                clearInterval(timerInterval);
                return xhr;
            },
            success: function (data) {

                clearInterval(interVal);
                $('#progress').css('width', 100 + "%");
                //successMessage.init();
                setTimeout(function () {
                    //Attach_File();
                    Swal.fire({
                        icon: "success",
                        title: 'Your data has been saved',
                        showConfirmButton: true,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        location.reload();
                    });
                }, 1500);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }
    $("#saveInsmnSt").click(function () {
        var BRDR_ST = true;
        tableInsmnSt.rows().every(function (index) {
            var rowData = this.data();
            if (rowData.BRDR_ST == 6) {
                BRDR_ST = false;
            }
        });

        if (BRDR_ST == true) {
            Swal.fire({
                icon: "question",
                title: 'Do you want to save?',
                text: "Are you sure to Add Insmn",
                showCancelButton: true,
                confirmButtonText: 'Yes',
            }).then((result) => {
                if (result.isConfirmed) {
                    saveInsmnSt();
                }
            });
        } else {
            Swal.fire({
                icon: "error",
                title: 'Empty!',
                text: "กรุณาเลือกข้อมูลให้ครบถ้วนหรือลบออก",
                showCancelButton: false,
                confirmButtonText: 'OK',
            });
        }
    });
    function saveInsmnSt() {
        var AVY_BRDR_INSMN = new Array();
        var TXN_HSG_MATE = new Array();
        var HSG_ID = "";
        var GND = "";
        var CHG_ST = 0;

        for (var i = 0; i < tableInsmnSt.data().length; i++) {
            var tbInsmn = {};
            tbInsmn.SITE_ID = tableInsmnSt.data()[i].SITE_ID;
            tbInsmn.HSG_ID = tableInsmnSt.data()[i].HSG_ID;
            tbInsmn.BRDR_FML_ID = tableInsmnSt.data()[i].BRDR_FML_ID;
            tbInsmn.BRDR_ST = tableInsmnSt.data()[i].BRDR_ST;
            tbInsmn.BRDR_ST_CHG_DATE = $("#searchDate").val();
            AVY_BRDR_INSMN.push(tbInsmn);

            HSG_ID = tableInsmnSt.data()[i].HSG_ID;
            CHG_ST++;
        }
        for (var i = 0; i < tableMain.data().length; i++) {
            if (tableMain.data()[i].HSG_ID == HSG_ID && tableMain.data()[i].GND == "X") {
                var net = (tableMain.data()[i].BALANCE_QTY + tableMain.data()[i].FM_FRRW_QTY + tableMain.data()[i].FM_RPLCMT_QTY + tableMain.data()[i].RCV_QTY) - (tableMain.data()[i].TFR_QTY + tableMain.data()[i].DIED_TOT + tableMain.data()[i].DSCRD_TOT);
                if (net > 0) {
                    let tbmate = {};
                    tbmate.SITE_ID = tableMain.data()[i].SITE_ID;
                    tbmate.HSG_ID = tableMain.data()[i].HSG_ID;
                    tbmate.TXN_DT = $("#searchDate").val();
                    tbmate.GND = tableMain.data()[i].GND;
                    tbmate.CHG_ST = CHG_ST;
                    tbmate.NET_QTY = net;
                    TXN_HSG_MATE.push(tbmate);
                }
            }
        }

        AVY_BRDR_INSMN_DEL = {};
        AVY_BRDR_INSMN_DEL.SITE_ID = $("#SIT_IST").val();
        AVY_BRDR_INSMN_DEL.HSG_ID = $("#HSG_IST").val();
        AVY_BRDR_INSMN_DEL.INSMN_DT = $("#IDT_IST").val();

        $.ajax({
            contentType: "application/json; charset=utf-8",// กำหนด content สำหรับส่งข้อมูลแบบ object or list
            type: "POST",
            url: pathServer + "/MAT/HSGMATDT01_INSMNST_INSERT",
            dataType: "json",
            data: JSON.stringify({ TXN_HSG_MATE: TXN_HSG_MATE, AVY_BRDR_INSMN: AVY_BRDR_INSMN, AVY_BRDR_INSMN_DEL: AVY_BRDR_INSMN_DEL }), //parameter Object,List
            xhr: function () {
                var xhr = new window.XMLHttpRequest();
                let timerInterval;
                xhr_loading(xhr);
                clearInterval(timerInterval);
                return xhr;
            },
            success: function (data) {

                clearInterval(interVal);
                $('#progress').css('width', 100 + "%");
                //successMessage.init();
                setTimeout(function () {
                    //Attach_File();
                    Swal.fire({
                        icon: "success",
                        title: 'Your data has been saved',
                        showConfirmButton: true,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        location.reload();
                    });
                }, 1500);
            },
            error: function () {
                errorAlert.init();
            }
        });
    }
</script>